library(tidyverse)
library(classdata)
states <- map_data("state")
head(states)
states %>% ggplot(aes(x = long, y = lat)) + geom_point() # dotted outline
states %>% ggplot(aes(x = long, y = lat)) + geom_path(aes(group = group)) # line outline
states %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group)) # filled in
states %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill=lat)) # filled in by color for lat
counties <- map_data("county")
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "washington")))
View(counties)
counties <- map_data("county")
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "washington")))
counties %>% group_by(subregion) %>% summarise(n = length(unique(group))) %>% arrange(desc(n))
map %>% ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group)) +
geom_point(aes(x=longitude, y = latitude), data = content)
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "story")))
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "lake")))
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "big stone")))
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "blue earth")))
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "benton")))
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "beltrami")))
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "becker")))
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "anoka")))
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "brown")))
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "carlton")))
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "carver")))
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "cass")))
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "chippewa")))
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "chisago")))
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "clay")))
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "clearwater")))
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "cook")))
knitr::opts_chunk$set(echo = TRUE)
acc <- read.csv("https://raw.githubusercontent.com/DS202-at-ISU/labs/master/data/fars2016/accident.csv", stringsAsFactors = FALSE)
names(acc)
View(acc)
acc -> group_by(DAY_WEEK) -> summarise(n = count(unique(ST_CASE)))
acc.day.week = acc %>% group_by(DAY_WEEK) -> summarise(n = count(unique(ST_CASE)))
library(tidyverse)
acc.day.week = acc %>% group_by(DAY_WEEK) -> summarise(n = count(unique(ST_CASE)))
acc.day.week = acc %>% group_by(DAY_WEEK) -> summarise(n = count(unique(ST_CASE)))
acc.day.week = acc %>% group_by(DAY_WEEK) -> summarise(n = n())
acc.day.week = acc %>% group_by(DAY_WEEK) -> summarise(n = count(ST_CASE))
acc <- read.csv("https://raw.githubusercontent.com/DS202-at-ISU/labs/master/data/fars2016/accident.csv", stringsAsFactors = FALSE)
names(acc)
acc.day.week = acc %>% group_by(DAY_WEEK) -> summarise(n = count(ST_CASE))
acc.day.week = acc %>% group_by(DAY_WEEK) %>% summarise(n = count(unique(ST_CASE)))
acc.day.week = acc %>% group_by(DAY_WEEK) %>% summarise(n = n())
View(acc.day.week)
acc.day.week %>% ggplot(aes(x = DAY_WEEK)) +
geom_bar(aes(weight = n))
names(acc.day.week)[0]
names(acc.day.week)[0]
names(acc.day.week)
values(acc.day.week)
acc.day.week %>% ggplot(aes(x = DAY_WEEK)) +
geom_bar(aes(weight = n))
rownames(acc.day.week)
rownames(acc.day.week)[0]
rownames(acc.day.week)[0] = "Sunday"
rownames(acc.day.week)[0] = "Sunday"
rownames(acc.day.week)[6] = "Saturday"
rownames(acc.day.week)[0] = "Sunday"
rownames(acc.day.week)[1] = "Monday"
rownames(acc.day.week)[2] = "Tuesday"
rownames(acc.day.week)[3] = "Wednesday"
rownames(acc.day.week)[4] = "Thursday"
rownames(acc.day.week)[5] = "Friday"
rownames(acc.day.week)[6] = "Saturday"
acc.day.week %>% ggplot(aes(x = DAY_WEEK)) +
geom_bar(aes(weight = n))
View(acc.day.week)
rownames(acc.day.week)[0] = "Sunday"
rownames(acc.day.week) <- c("Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat")
row.names(acc.day.week) <- c("Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat")
View(acc.day.week)
acc.day.week[0]
acc.day.week[0][0]
acc.day.week
library(tidyverse)
library(maps)
states <- map_data("state")
acc <- read.csv("https://raw.githubusercontent.com/DS202-at-ISU/labs/master/data/fars2016/accident.csv", stringsAsFactors = FALSE)
row(acc.day.week)
row(acc.day.week)[0]
row(acc.day.week)
row(acc.day.week)[1]
row(acc.day.week)[0]
row(acc.day.week)[1]
row(acc.day.week)
row(acc.day.week)[1] = "Sun"
row(acc.day.week)[1]
row(acc.day.week)
rows(acc.day.week)
rows_update(acc.day.week)
rows_update(acc.day.week, c("Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"))
row.names(acc.day.week)
View(acc.day.week)
acc.day.week = acc %>% group_by(DAY_WEEK) %>% summarise(n = n())
acc.day.week
acc.day.week = row.names(acc.day.week) -> c("Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat")
row.names(acc.day.week) -> c("Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat")
row.names(acc.day.week) <-c("Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat")
View(acc.day.week)
acc.day.week = row.names(acc.day.week) <-c("Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat")
acc.day.week = acc %>% group_by(DAY_WEEK) %>% summarise(n = n())
acc.day.week = row.names(acc.day.week) <-c("Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat")
acc.day.week %>% ggplot(aes(x = DAY_WEEK)) +
geom_bar(aes(weight = n))
acc.day.week = acc %>% group_by(DAY_WEEK) %>% summarise(n = n())
acc.day.week %>% ggplot(aes(x = DAY_WEEK)) +
geom_bar(aes(weight = n))
row.names(acc.day.week) = row.names(acc.day.week) <-c("Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat")
row.names(acc.day.week) <- c("Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat")
View(acc.day.week)
acc.day.week = acc %>% group_by(DAY_WEEK) %>% summarise(n = n())
row.names(acc.day.week) <- c("Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat")
acc.day.week %>% ggplot(aes(x = DAY_WEEK)) +
geom_bar(aes(weight = n))
acc.day.week = acc.day.week %>% mutate(DAY_WEEK = c("Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"))
acc.day.week = acc %>% group_by(DAY_WEEK) %>% summarise(n = n())
acc.day.week = acc.day.week %>% mutate(DAY_WEEK = c("Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"))
acc.day.week %>% ggplot(aes(x = DAY_WEEK)) +
geom_bar(aes(weight = n))
acc.day.week = acc %>% mutate(DAY_WEEK = c("Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"))
acc <- read.csv("https://raw.githubusercontent.com/DS202-at-ISU/labs/master/data/fars2016/accident.csv", stringsAsFactors = FALSE)
acc.day.week = acc %>% mutate(DAY_WEEK = c("Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"))
View(acc)
acc.day.week = acc %>% group_by(DAY_WEEK) %>% summarise(n = n())
acc.day.week = acc.day.week %>% mutate(DAY_WEEK = c("Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"))
View(acc.day.week)
acc.day.week %>% ggplot(aes(x = DAY_WEEK)) +
geom_bar(aes(weight = n))
level.reorder = levels(reorder(acc.day.week$DAY_WEEK, acc.day.week$n, fun = mean, na.rm=TRUE))
acc.day.week.reorder = factor(acc.day.week, levels = level.reorder)
acc.day.week$DAY_WEEK = acc.day.week.reorder
level.reorder = levels(reorder(acc.day.week$DAY_WEEK, acc.day.week$n, fun = mean, na.rm=TRUE))
acc.day.week.reorder = factor(acc.day.week, levels = level.reorder)
acc.day.week$DAY_WEEK = acc.day.week.reorder
level.reorder = levels(reorder(acc.day.week$DAY_WEEK, acc.day.week$n, fun = mean))
acc.day.week.reorder = factor(acc.day.week, levels = level.reorder)
acc.day.week$DAY_WEEK = acc.day.week.reorder
acc.day.week$DAY_WEEK = acc.day.week.reorder
acc.day.week.reorder
acc.day.week.reorder = factor(acc.day.week, levels = level.reorder)
acc.day.week.reorder
level.reorder = levels(reorder(acc.day.week$DAY_WEEK, acc.day.week$n, fun = sum))
level.reorder = levels(reorder(acc.day.week$DAY_WEEK, acc.day.week$n, fun = count))
acc.day.week.reorder = factor(acc.day.week, levels = level.reorder)
acc.day.week$DAY_WEEK = acc.day.week.reorder
level.reorder
acc.day.week.reorder = factor(as.factor(acc.day.week), levels = level.reorder)
View(fbi)
library(classdata)
level.reorder = levels(reorder(acc.day.week$DAY_WEEK, acc.day.week$n, fun = count))
level.reorder
acc.day.week.reorder = factor(as.factor(acc.day.week), levels = level.reorder)
level.reorder
acc.day.week.reorder = factor(acc.day.week, levels = level.reorder)
acc.day.week$DAY_WEEK = acc.day.week.reorder
View(acc.day.week)
acc.day.week %>% ggplot(aes(x = DAY_WEEK)) +
geom_bar(aes(weight = n))
acc.day.week = acc %>% group_by(DAY_WEEK) %>% summarise(n = n())
acc.day.week = acc.day.week %>% mutate(DAY_WEEK = c("Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"))
acc.week = acc.day.week$DAY_WEEK
acc.day.week = acc %>% group_by(DAY_WEEK) %>% summarise(n = n())
acc.day.week = acc.day.week %>% mutate(DAY_WEEK = c("Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"))
acc.day.week %>% ggplot(aes(x = DAY_WEEK)) +
geom_bar(aes(weight = n))
View(acc)
acc2016.mainland = acc %>% filter(yead == 2016)
acc2016.mainland = acc2016.mainland %>% mutate(drunk = (DRUNK_DR > 0))
states %>% ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +
geom_point(data = acc2016.mainland,
aes(x = LONGTTUD,y = LATITUDE), size = 0.05)
acc2016.mainland = acc %>% filter(yead == 2016)
acc2016.mainland = acc %>% filter(year == 2016)
View(acc)
acc2016.mainland = acc %>% filter(YEAR == 2016)
acc2016.mainland = acc2016.mainland %>% mutate(drunk = (DRUNK_DR > 0))
states %>% ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +
geom_point(data = acc2016.mainland,
aes(x = LONGTTUD,y = LATITUDE), size = 0.05)
states %>% ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +
geom_point(data = acc2016.mainland,
aes(x = LONGTTUD,y = LATITUDE), size = 0.05, color = drunk)
acc2016.mainland = acc2016.mainland %>% mutate(drunk = (DRUNK_DR > 0))
states %>% ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +
geom_point(data = acc2016.mainland,
aes(x = LONGTTUD,y = LATITUDE), size = 0.05, color = drunk)
states %>% ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +
geom_point(data = acc2016.mainland,
aes(x = LONGTTUD,y = LATITUDE, col = drunk), size = 0.05)
states %>% ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +
geom_point(data = acc2016.mainland,
aes(x = LONGITUD,y = LATITUDE, col = drunk), size = 0.05)
states %>% ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +
geom_point(data = acc2016.mainland %>% filter(FATALS >=3),
aes(x = LONGITUD,y = LATITUDE, col = drunk), size = 0.05)
acc2016.mainland = acc %>% filter(YEAR == 2016 && LONGITUD <0)
states %>% ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +
geom_point(data = acc2016.mainland,
aes(x = LONGTTUD,y = LATITUDE), size = 0.05)
acc2016.mainland = acc %>% filter(YEAR == 2016, LONGITUD <0)
states %>% ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +
geom_point(data = acc2016.mainland,
aes(x = LONGTTUD,y = LATITUDE), size = 0.05)
states %>% ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +
geom_point(data = acc2016.mainland,
aes(x = LONGITUD,y = LATITUDE), size = 0.05)
acc2016.mainland = acc %>% filter(YEAR == 2016, LONGITUD <0 && LONGITUD >-140, LATITUDE <55)
states %>% ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +
geom_point(data = acc2016.mainland,
aes(x = LONGITUD,y = LATITUDE), size = 0.05)
acc2016.mainland = acc %>% filter(YEAR == 2016, LONGITUD <0, LONGITUD >-140, LATITUDE <55)
states %>% ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +
geom_point(data = acc2016.mainland,
aes(x = LONGITUD,y = LATITUDE), size = 0.05)
acc2016.mainland = acc2016.mainland %>% mutate(drunk = (DRUNK_DR > 0))
states %>% ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +
geom_point(data = acc2016.mainland,
aes(x = LONGITUD,y = LATITUDE, col = drunk), size = 0.05)
states %>% ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +
geom_point(data = acc2016.mainland %>% filter(FATALS >=3),
aes(x = LONGITUD,y = LATITUDE, col = drunk), size = 0.05)
states %>% ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +
geom_point(data = acc2016.mainland %>% filter(FATALS >=3),
aes(x = LONGITUD,y = LATITUDE, col = drunk), size = 0.1)
states %>% ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +
geom_point(data = acc2016.mainland %>% filter(FATALS >=3),
aes(x = LONGITUD,y = LATITUDE, col = drunk), size = 0.5)
acc.day.week %>% arrange(n)
acc.day.week %>% ggplot(aes(x = DAY_WEEK)) +
geom_bar(aes(weight = n))
acc.day.week = acc.day.week %>% arrange(n)
acc.day.week %>% ggplot(aes(x = DAY_WEEK)) +
geom_bar(aes(weight = n))
View(acc.day.week)
state.code = read.csv("StateNames.csv")
setwd("~/Desktop/Iowa State University/Comp Sci/ds202/Class Notes")
state.code = read.csv("StateNames.csv")
View(state.code)
level.reorder = levels(reorder(acc.day.week$DAY_WEEK, acc.day.week$n, fun = mean, na.rm=TRUE))
acc.day.week.r
acc.day.week.r = acc.day.week$DAY_WEEK
level.reorder = levels(reorder(acc.day.week$DAY_WEEK, acc.day.week$n, fun = mean, na.rm=TRUE))
acc.day.week.reorder = factor(acc.day.week.r, levels = level.reorder)
acc.day.week$DAY_WEEK = acc.day.week.reorder
acc.day.week %>% ggplot(aes(x = DAY_WEEK)) +
geom_bar(aes(weight = n))
names(state.code)[1] = "region"
state.code$region = tolowercase(state.code$region)
state.code$region = tolower(state.code$region)
View(state.code)
acc.day.houe = acc %>% group_by(HOUR) %>% summarise(n = n())
acc.day.hour = acc %>% group_by(HOUR) %>% summarise(n = n())
View(acc.day.hour)
acc.day.week %>% ggplot(aes(x = DAY_WEEK)) +
geom_bar(aes(weight = n))
acc.day.hour %>% ggplot(aes(x = HOUR)) +
geom_bar(aes(weight = n))
acc2016.mainland2 = left_join(acc2016.mainland, state.code, by = c("STATE" = "code"))
View(acc2016.mainland2)
source("~/Desktop/Iowa State University/Comp Sci/ds202/Class Notes/polishing.R", echo=TRUE)
states %>% ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +
geom_point(data = acc2016.mainland1 %>% filter(FATALS >=3),
aes(x = LONGITUD,y = LATITUDE, col = drunk), size = 0.5)
state.code = read.csv("StateNames.csv")
names(state.code)[1] = "region"
state.code$region = tolower(state.code$region)
acc2016.mainland2 = left_join(acc2016.mainland1, state.code, by = c("STATE" = "code"))
acc2016.state = acc2016.mainland2 %>% group_by(region) %>%
summarise(n = n())
View(acc2016.state)
acc2016.state = acc2016.mainland2 %>% group_by(region) %>%
summarise(n = n()) %>% ungroup()
View(acc2016.state)
acc2016.state = acc2016.mainland2 %>% group_by(region) %>%
summarise(n = n()) %>% ungroup()
left_join(states , acc2016.state, by = region)
states.acc = left_join(states , acc2016.state, by = "region")
View(states.acc)
states.acc %>% ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = n))
acc.day.hour <- acc.day.hour[-c(25), ]
acc.day.hour %>% ggplot(aes(x = HOUR)) +
geom_bar(aes(weight = n))
source("~/Desktop/Iowa State University/Comp Sci/ds202/Class Notes/polishing.R", echo=TRUE)
source("~/Desktop/Iowa State University/Comp Sci/ds202/Class Notes/polishing.R", echo=TRUE)
display.brewer.all()
library(RColorBrewer)
display.brewer.all()
p <- mpg %>% ggplot(aes(x = displ, y =  cty, colour= factor(class))) + geom_point()
p + theme_grey()
p <- mpg %>% ggplot(aes(x = displ, y =  cty, colour= factor(class))) + geom_point()
p + theme_grey()
p <- mtcars %>% ggplot(aes(x = wt, y =  mpg, colour= factor(cyl))) + geom_point()
p + theme_light()
p + theme_dark()
library(ggthemes)
p + theme_excel()
install.packages("ggthemes")
library(ggthemes)
p + theme_excel()
p + theme_fivethirtyeight()
# default continuous color scheme
# scale_colour_gradient -> used for continuous
p1 <- mpg %>% filter(year == 2008) %>%
ggplot(aes(x = cty, y = hwy, colour = cyl)) +
geom_point()
p1 + scale_color_continuous()
# default discrete color scheme
p2 <- mpg %>% filter(year == 2008) %>%
ggplot(aes(x = cty, y = hwy, colour = factor(cyl))) +
geom_point()
p2 + scale_color_discrete()
acc.day.hour = acc %>% filter(DRUNK_DR >= 1) %>% summarise(n = n())
acc.day.drunk = acc %>% filter(DRUNK_DR >= 1) %>% summarise(n = n())
View(acc.day.drunk)
acc.day.drunk
What is the number of accidents with at least one drunk driver (use variable DRUNK_DR)?<br>
**Answer: There are 8720 accidents with at least one drunk driver. **
```{r}
acc.day.drunk = acc %>% filter(DRUNK_DR >= 1) %>% summarise(n = n())
acc.day.drunk
```
person = read.csv("https://raw.githubusercontent.com/yumouqiu/DS202-Spring2022/main/Practice/data/fars2016/person.csv")
person.table = read.csv("https://raw.githubusercontent.com/yumouqiu/DS202-Spring2022/main/Practice/data/fars2016/person.csv")
View(person.table)
states.acc %>% ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = n))
fars?
View(person.table)
person.table = person.table %>% filter(PER_TYP == 1)
View(acc)
sum(is.na(acc))
sum(is.na(person.table))
left_join(acc, person.table, by = ST_CASE)
left_join(acc, person.table, by = "ST_CASE")
acc.person = left_join(acc, person.table, by = "ST_CASE")
View(acc.person)
acc.person.tally = acc.person %>% group_by(DAY_WEEK, HOUR.x)
View(acc.person.tally)
acc.person = left_join(acc, person.table, by = c("ST_CASE", "HOUR"))
View(acc.person)
acc.person.tally = acc.person %>% group_by(DAY_WEEK, HOUR)
View(acc.person.tally)
acc.person.tally = acc.person %>% group_by(DAY_WEEK, HOUR, SEX) %>% summarise(n = n())
View(acc.person.tally)
acc.person.tally = acc.person %>% group_by(DAY_WEEK, HOUR) %>% summarise(n = n())
View(acc.person.tally)
acc.person.tally = acc.person %>% group_by(DAY_WEEK, HOUR) %>% summarise(male = count(SEX == 1), female = count(SEX == 2))
acc.person.tally = acc.person %>% group_by(DAY_WEEK, HOUR) %>%
summarise(
male = sum(SEX == 1),
female = count(SEX == 2)
)
acc.person.tally = acc.person %>% group_by(DAY_WEEK, HOUR) %>%
summarise(
male = count(SEX == 1),
female = count(SEX == 2)
)
acc.person.tally = acc.person %>% group_by(DAY_WEEK, HOUR) %>%
summarise(
male = (SEX == 1),
female = (SEX == 2)
)
View(acc.person.tally)
acc.person.tally = acc.person %>% group_by(DAY_WEEK, HOUR) %>%
summarise(
male = sum(SEX == 1),
female = (SEX == 2)
)
View(acc.person.tally)
acc.person.tally = acc.person %>% group_by(DAY_WEEK, HOUR) %>%
summarise(
male = count(SEX == 1),
female = (SEX == 2)
)
acc.person.tally = acc.person %>% group_by(DAY_WEEK, HOUR, SEX) %>%
summarise(
n=n()
)
View(acc.person.tally)
acc.person.tally = acc.person %>% group_by(DAY_WEEK, HOUR, SEX) %>%
summarise(
test = count(SEX == 1)
)
acc.person.tally = acc.person %>% group_by(DAY_WEEK, HOUR, SEX) %>%
summarise(
test = sum(SEX == 1)
)
View(acc.person.tally)
acc.person.tally = acc.person %>% group_by(DAY_WEEK, HOUR) %>%
summarise(
test = count(acc.person[acc.person$SEX == 1])
)
count(acc.person[acc.person$SEX == 1])
count(acc.person$SEX == 1)
sum(acc.person$SEX == 1)
acc.person.tally = acc.person %>% group_by(DAY_WEEK, HOUR) %>%
summarise(
test = nrow(acc.person[acc.person$SEX == 1],)
)
View(state.code)
acc.person = left_join(acc, person.table, by = c("ST_CASE", "HOUR", "YEAR", "DAY", "MONTH"))
acc.person = left_join(acc, person.table, by = c("ST_CASE", "HOUR", "MINUTE", "DAY", "MONTH"))
acc.person.tally = acc.person %>% group_by(DAY_WEEK, HOUR) %>%
summarise(
#test = nrow(acc.person[acc.person$SEX == 1],)
test = length(which(acc.person$SEX == 1))
)
View(acc.person.tally)
acc.person.tally = acc.person %>% group_by(DAY_WEEK, HOUR) %>%
summarise(
#test = nrow(acc.person[acc.person$SEX == 1],)
test = length(which(acc.person.tally$SEX == 1))
)
acc.person.tally = acc.person %>% group_by(DAY_WEEK, HOUR, SEX) %>%
summarise(
#test = nrow(acc.person[acc.person$SEX == 1],)
test = length(which(acc.person.tally$SEX == 1))
)
acc.person.tally = acc.person %>% group_by(DAY_WEEK, HOUR) %>%
summarise(
#test = nrow(acc.person[acc.person$SEX == 1],)
test = length(which(acc.person$SEX == 1))
)
View(acc.person.tally)
test = acc.person %>% group_by(SEX) %>% summarise(n = n())
View(test)
unique(person$SEX)
person = person %>% filter(SEX == 1 || SEX == 2)
acc.person = left_join(acc, person.table, by = c("ST_CASE", "HOUR", "MINUTE", "DAY", "MONTH"))
unique(person$SEX)
person = person %>% filter(SEX == 1 || SEX == 2)
unique(person$SEX)
person = person %>% filter(SEX == 1, SEX == 2)
unique(person$SEX)
person.table = read.csv("https://raw.githubusercontent.com/yumouqiu/DS202-Spring2022/main/Practice/data/fars2016/person.csv")
person.table = read.csv("https://raw.githubusercontent.com/yumouqiu/DS202-Spring2022/main/Practice/data/fars2016/person.csv")
person.table = person.table %>% filter(PER_TYP == 1)
person = person %>% filter(SEX == 1, SEX == 2)
person.table = read.csv("https://raw.githubusercontent.com/yumouqiu/DS202-Spring2022/main/Practice/data/fars2016/person.csv")
person.table = read.csv("https://raw.githubusercontent.com/yumouqiu/DS202-Spring2022/main/Practice/data/fars2016/person.csv")
person.table = person.table %>% filter(PER_TYP == 1)
unique(person.table$SEX)
person.table = person.table %>% filter(SEX == 1, SEX == 2)
acc.person = left_join(acc, person.table, by = c("ST_CASE", "HOUR", "MINUTE", "DAY", "MONTH"))
unique(person.table$SEX)
person.table = read.csv("https://raw.githubusercontent.com/yumouqiu/DS202-Spring2022/main/Practice/data/fars2016/person.csv")
person.table = read.csv("https://raw.githubusercontent.com/yumouqiu/DS202-Spring2022/main/Practice/data/fars2016/person.csv")
person.table = person.table %>% filter(PER_TYP == 1)
person.table = person.table %>% filter(SEX == 1 || SEX == 2)
acc.person = left_join(acc, person.table, by = c("ST_CASE", "HOUR", "MINUTE", "DAY", "MONTH"))
unique(person.table$SEX)
person.table = person.table %>% filter(SEX == 1)
unique(person.table$SEX)
person.table = person.table %>% filter(SEX == 1 | SEX == 2)
person.table = read.csv("https://raw.githubusercontent.com/yumouqiu/DS202-Spring2022/main/Practice/data/fars2016/person.csv")
person.table = read.csv("https://raw.githubusercontent.com/yumouqiu/DS202-Spring2022/main/Practice/data/fars2016/person.csv")
person.table = person.table %>% filter(PER_TYP == 1)
person.table = person.table %>% filter(SEX == 1 | SEX == 2)
acc.person = left_join(acc, person.table, by = c("ST_CASE", "HOUR", "MINUTE", "DAY", "MONTH"))
unique(person.table$SEX)
acc.person.tally = acc.person %>% group_by(DAY_WEEK, HOUR, SEX) %>%
summarise(
n = n()
)
View(acc.person.tally)
acc.person.tally = acc.person %>% group_by(DAY_WEEK, HOUR, SEX) %>%
summarise(n = n(), rm.na = TRUE)
View(acc.person.tally)
acc.person.tally = acc.person %>% group_by(DAY_WEEK, HOUR, SEX) %>%
summarise(n = n(), na.rm = TRUE)
View(acc.person.tally)
acc.person.tally = na.omit(acc.person.tally)
View(acc.person.tally)
acc.person.tally = acc.person %>% group_by(DAY_WEEK, HOUR, SEX) %>%
summarise(n = n())
acc.person.tally = na.omit(acc.person.tally)
View(acc.person.tally)
acc.person.tally %>% ggplot(aes(x = DAY_WEEK, y = HOUR, color = SEX))
acc.person.tally %>% ggplot(aes(x = DAY_WEEK, y = HOUR, color = SEX)) +
geom_point()
acc.person.tally %>% ggplot(aes(x = HOUR, y = n, color = SEX)) +
geom_point() +
facet_wrap(~DAY_WEEK)
acc.person.tally = acc.person.tally %>% filter(HOUR < 25)
acc.person.tally %>% ggplot(aes(x = HOUR, y = n, color = SEX)) +
geom_point() +
facet_wrap(~DAY_WEEK)
