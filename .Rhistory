axis.text.x = element_text(size = rel(0.8)),
axis.ticks.y = element_blank(),
axis.text.y = element_blank()) +
xlab("") + ylab("") +
guides(color = guide_legend(ncol=2)) +
coord_radar()
ggplot(data = filter(fbi, Type=="Murder.and.nonnegligent.Manslaughter"),
aes(x = Year, y = Count)) + geom_point()
View(fbi)
View(fbi)
ggplot(data = filter(fbi, Type=="Murder"),
aes(x = Year, y = Count)) + geom_point()
fbi %>%
filter(Type=="Murder") %>%
ggplot(aes(x = Year, y = Count)) +
geom_point()
ggplot(data = filter(fbi, Type=="Murder"),
aes(x = Year, y = Count)) + geom_point()
fbi %>%
filter(Type=="Murder") %>%
ggplot(aes(x = Year, y = Count)) +
geom_point()
fbi %>% flter(Type == "Burglary", Year == 2014) %>% head()
fbi %>% filter(Type == "Burglary", Year == 2014) %>% head()
#arrange function, sorts the data by the values in one or more variables
fbi %>% arrange(desc(Year), Type, desc(Count)) %>% head()
#select
fbi %>% arrange(desc(Year), Type, desc(Count)) %>%
select(Typem Count, Year) %>% head()
#select
fbi %>% arrange(desc(Year), Type, desc(Count)) %>%
select(Type, Count, Year) %>% head()
#select
fbi %>% arrange(desc(Year), Type, desc(Count)) %>%
select(Type, Count, Year) %>% head()
#mutate
fbi %>% mutate(Rate = Count/Population * 70000) %>% head()
#summarise - observations into a (set of ) ont-number statistic(s)
fbi %>%
summarise(mean_rate= mean(Count/Population * 70000, na.rm = TRUE),
sd_rate = sd(Count/population*70000, na.rm=TRUE))
#summarise - observations into a (set of ) one-number statistic(s)
fbi %>%
summarise(mean_rate= mean(Count/Population * 70000, na.rm = TRUE),
sd_rate = sd(Count/population*70000, na.rm=TRUE))
#summarise - observations into a (set of ) one-number statistic(s)
fbi %>%
summarise(mean_rate= mean(Count/Population * 70000, na.rm = TRUE),
sd_rate = sd(Count/Population*70000, na.rm=TRUE))
fbi %>%
group_by(Type) %>%
summarise(mean_rate = mean(Count/Population*70000, na.rm=TRUE),
sd_rate = sd(Count/Population*70000, na.rm = TRUE))
knitr::opts_chunk$set(echo = TRUE)
library(classdata)
library(tidyverse)
library(ggplot2)
choco %>% ggplot(aes(x = as.factor(Rating))) +
geom_bar() +
ggtitle("") +
xlab("Year")
unique(choco$Rating)
summarise(choco$Rating)
summary(choco$Rating)
boxplot.stats(choco$Rating)$out
choco %>% ggplot(aes(x = as.factor(Rating))) +
geom_bar() +
ggtitle("") +
xlab("Year")
boxplot.stats(choco$Rating)$out
choco %>% ggplot(aes(x = Cocoa.Pct, y = Rating)) +
geom_point() +
ggtitle("") +
choco %>% ggplot(aes(x = Cocoa.Pct, y = Rating)) +
geom_point() +
ggtitle("")
choco %>% ggplot(aes(x = Cocoa.Pct, y = Rating)) +
geom_point()
choco %>% ggplot(aes(x = Cocoa.Pct, y = Rating)) +
geom_jitter()
geom_point
choco %>% ggplot(aes(x = Cocoa.Pct, y = Rating)) +
geom_point()
round(cor(choco), 2)
choco %>% ggplot(aes(x = Cocoa.Pct, y = Rating)) +
geom_point()
data1 <- choco[, c(4, 6)]
round(cor(data1), 2)
View(data1)
data1 <- choco[, c(5, 7)]
View(data1)
data1 <- choco[, c(5, 7)]
round(cor(data1), 2)
dplyr::filter(choco, Company.Location %in% c("U.S.A.", "Fance", "Canada"))
choco1 <- dplyr::filter(choco, Company.Location %in% c("U.S.A.", "Fance", "Canada"))
View(choco1)
choco1 <- dplyr::filter(choco, Company.Location %in% c("U.S.A."))
choco2 <- dplyr::filter(choco, Company.Location %in% c("France"))
choco3 <- dplyr::filter(choco, Company.Location %in% c("Canada"))
#Fbi data, how to show relationship between class, gender, and survive?
fbi1 = fbi[fbi$State %in% c("California", "New York"), ]
fbi1 = fbi1[fbi1$Year %in% c(1971, 2016), ]
ggplot(data = fbi1, aes(x = State, fill=Type)) +
geom_bar(aes(weight = Count), position = position_dodge()) + #total crimes in each state in the two years
facet_wrap(~Year)
Type
choco1 <- dplyr::filter(choco, Company.Location %in% c("U.S.A.","France", "Canada"))
ggplot(data = choco1, aes(x = Company.Location, fill=Type)) +
geom_bar(aes(weight = Count), position = position_dodge()) +
facet_wrap(~Company.Location)
ggplot(data = choco1, aes(x = Company.Location, fill=Type)) +
geom_bar(aes(weight = Count), position = position_dodge())
ggplot(data = choco1, aes(x = Company.Location, fill=Rating)) +
geom_bar(aes(weight = Count), position = position_dodge())
ggplot(data = choco1, aes(x = Company.Location, fill=Rating)) +
geom_bar(aes(weight = Rating), position = position_dodge())
ggplot(data = choco1, aes(x = Company.Location, fill=Rating)) +
geom_bar(aes(weight = Rating), position = position_dodge()) +
facet_wrap(~Company.Location)
ggplot(data = choco1, aes(x = Company.Location, fill=Rating)) +
geom_bar(aes(weight = Rating), position = position_dodge()) +
facet_wrap(~Rating)
ggplot(data = choco1, aes(x = Company.Location)) +
geom_bar(aes(weight = Rating), position = position_dodge()) +
facet_wrap(~Rating)
str(choco2)
choco1 <- dplyr::filter(choco, Company.Location %in% c("U.S.A.","France", "Canada"))
choco2 <- dplyr::filter(choco, Company.Location %in% c("U.S.A."))
choco3 <- dplyr::filter(choco, Company.Location %in% c("Canada"))
choco4 <- dplyr::filter(choco, Company.Location %in% c("France"))
str(choco2) # france  -
str(choco3)
str(choco4)
ggplot(data = choco1, aes(x = Company.Location)) +
geom_bar(aes(weight = Rating), position = position_dodge()) +
facet_wrap(~Rating)
library(tidyverse)
library(classdata)
library(ggplot2)
crime.type = fbi$Type
levels(crime.type)
#first parameter = what we are reordering, second = based on what we are reordering
level.reorder = levels(reorder(fbi$Type, fbi$Count, fun = mean, na.rm=TRUE))
#create a new factor, based on original factor but the levels are corresponding to the new levels
crime.type.reorder = factor(crime.type, levels = level.reorder)
crime.type.reorder[c(1, 1000, 3001, 10000)]
crime.type[c(1, 1000, 3001, 10000)]
#changing the level's names
levels(crime.type.reorder)[1] = "Murder" #don't forget to put `levels` to change the first level and not the first element
crime.type.reorder[c(1, 1000, 3001, 10000)]
#Visualize factors
crime.type = fbi$Type
levels(crime.type)[1] = "Assault"
levels(crime.type)[5] = "Motor.theft"
levels(crime.type)[6] = "Murder"
fbi$Type = crime.type
ggplot(fbi, aes(x = Type, fill= Year)) + geom_bar() #nothing happens, forgot to make a bar plot for count
ggplot(fbi, aes(x = Type, fill= as.factor(Year))) +
geom_bar(aes(weight = Count))
#reorder
level.reorder = levels(reorder(fbi$Type, fbi$Count, fun = mean, na.rm=TRUE))
crime.type.reorder = factor(crime.type, levels = level.reorder)
fbi$Type = crime.type.reorder
ggplot(fbi, aes(x = Type, fill= as.factor(Year))) +
geom_bar(aes(weight = Count))
#Survival on the Titanic, new data set
head(titanic)
ggplot(titanic, aes(x = Survived)) + geom_bar()
ggplot(titanic, aes(x = Sex)) + geom_bar()
ggplot(titanic, aes(x = Age)) + geom_bar()
ggplot(titanic, aes(x = Class)) + geom_bar()
ggplot(titanic, aes(x = Sex, fill = as.factor(Survived))) +
geom_bar()
ggplot(titanic, aes(x = Sex, fill = as.factor(Survived))) +
geom_bar(position = "fill") #the fill shows proportions more clearly but doesn't show the number of survival
ggplot(titanic, aes(x = Sex, fill = as.factor(Survived))) +
geom_bar(position = position_dodge2()) #shows side by side instead of stacking
#two and more factor variables
library(ggmosaic)
ggplot(data = titanic) +
geom_mosaic(aes(x = product(Sex), fill = Survived, weight = 1)) +
facet_grid(Age~Class)
mean(choco2$Rating)
mean(choco4$Rating)
mean(choco2$Rating)
mean(choco3$Rating)
mean(choco4$Rating)
View(choco)
data2 <- choco[, c(6, 7)]
View(data2)
data2 %>% mutate(Average = mean(Rating)) %>% head()
unique(data2$Company.Location)
data2 <- choco[, c(6, 7)]
data2 %>% mutate(Average = mean()) %>% head()
data2 <- choco[, c(6, 7)]
data2 %>% mutate(Average = mean(1)) %>% head()
unique(data2$Company.Location)
data3 <- unique(data2$Company.Location)
data2 <- choco[, c(6, 7)]
data2 %>% mutate(Average = mean(1)) %>% head()
unique(data2$Company.Location)
data3 <- unique(data2$Company.Location)
head(data3)
data3 <- unique(data2$Company.Location)
data3 <- unique(choco[, c(7)])
data3 <- unique(choco[, c(6, 7)])
View(data3)
data3 <- unique(choco[, c(6])
data3 <- unique(choco[, c(6)])
data3 <- as.factor(unique(choco[, c(6)]))
data2 <- choco[, c(6, 7)]
View(data2)
data2 <- choco[, c( 7)]
data2 <- choco[, c(0, 7)]
data2 <- choco[, c(6, 7)]
data2 %>% mutate(Average = mean(1)) %>% head()
unique(data2$Company.Location)
data3 <- as.factor(unique(choco[, c(6)]))
data4 = choco
data4 = data[, c(6)]
data2 <- choco[, c(6, 7)]
data2 %>% mutate(Average = mean(1)) %>% head()
unique(data2$Company.Location)
data3 <- as.factor(unique(choco[, c(6)]))
data4 = choco
data4 = data[, c(6, 7)]
data2 <- choco[, c(6, 7)]
data2 %>% mutate(Average = mean(1)) %>% head()
unique(data2$Company.Location)
data3 <- as.factor(unique(choco[, c(6)]))
data4 = choco
data4 <- data[, c(6)]
data2 <- choco[, c(6, 7)]
data2 %>% mutate(Average = mean(1)) %>% head()
unique(data2$Company.Location)
data3 <- as.factor(unique(choco[, c(6)]))
data4 = choco
data4 <- data4[, c(6)]
data2 <- choco[, c(6, 7)]
data2 %>% mutate(Average = mean(1)) %>% head()
unique(data2$Company.Location)
data3 <- as.factor(unique(choco[, c(6)]))
data4 = choco
data4 <- data4[, c(6, 7)]
View(data4)
View(data4)
data2 %>% mutate(Rate = 0)
View(data2)
data3 <- data2[, c(1, 3)]
data2 <- choco[, c(6, 7)]
data2 %>% mutate(Rate = 0)
data3 <- data2[, c(1, 3)]
View(data2)
data2 <- choco[, c(6, 7)]
data2 %>% mutate(Rate = 0)
data3 <- data2[, c(1, 3)]
data2 <- choco[, c(6, 7)]
data2.AverageRating <- 0
data3 <- data2[, c(1, 3)]
View(data2)
data2 <- choco[, c(6, 7)]
data2$AverageRating <- 0
View(data2)
data3 <- data2[, c(1, 3)]
View(data3)
data3 %>%
groub_by() %>%
filter(n() == 1)
data3 %>%
groub_by(AverageRating) %>%
filter(n() == 1)
data3 %>%
group_by(AverageRating) %>%
filter(n() == 1)
View(data3)
data3 %>%
group_by(Company.Location) %>%
filter(n() == 1)
View(data3)
data3 <- data3 %>%
group_by(Company.Location) %>%
filter(n() == 1)
View(data3)
data3 <- data3 %>%
group_by(Company.Location)
View(data3)
data2 <- choco[, c(6, 7)]
data2$AverageRating <- 0
data3 <- data2[, c(1, 3)]
data3 <- data3 %>%
group_by(Company.Location)
View(data3)
data2 <- choco[, c(6, 7)]
data2$AverageRating <- 0
data3 <- data2[, c(1, 3)]
data3 <- data3 %>%
group_by(Company.Location) %>%
filter(n() == 1)
View(data3)
data4 <- data3[!duplicated(as.list(data3))]
View(data4)
distinct(data3, Company.Location)
data4 <- distinct(data3, Company.Location)
View(data3)
View(data4)
data4 <- distinct(choco, Company.Location)
View(data4)
View(data4)
data1 <- distinct(choco, Company.Location)
data1 %>% mutate(AverageRate = mean(choco$Rating)) %>% head()
View(data1)
data1 <- data1 %>% mutate(AverageRate = mean(choco$Rating)) %>% head()
View(data1)
data1 <- distinct(choco, Company.Location)
View(data1)
tapply(choco$Rating, choco$Company.Location, mean)
data1 %>% mutate(AverageRate = tapply(choco$Rating, choco$Company.Location, mean)) %>% head()
View(data1)
data1 %>% mutate(AverageRate = mean(choco$Rating)) %>% head()
data1 <- distinct(choco, Company.Location)
tapply(choco$Rating, choco$Company.Location, mean)
data1 %>% mutate(AverageRate = mean(choco$Rating)) %>% head()
View(data1)
data1 <- data1 %>% mutate(AverageRate = mean(choco$Rating)) %>% head()
View(data1)
data1 <- distinct(choco, Company.Location)
tapply(choco$Rating, choco$Company.Location, mean)
data1 <- data1 %>% mutate(AverageRate = tapply(choco$Rating, choco$Company.Location, mean)) %>% head()
View(data1)
tapply(choco$Rating, choco$Company.Location, mean)
data2342 = tapply(choco$Rating, choco$Company.Location, mean)
head(data2342)
data1 <- distinct(choco, Company.Location)
data2342 = tapply(choco$Rating, choco$Company.Location, mean)
head(data2342)
data1 <- data1 %>% mutate(AverageRate = tapply(choco$Rating, choco$Company.Location, mean)) %>% head()
data1 <- distinct(choco, Company.Location)
data2342 <- tapply(choco$Rating, choco$Company.Location, mean)
head(data2342)
data1 <- data1 %>% mutate(AverageRate = tapply(choco$Rating, choco$Company.Location, mean)) %>% head()
library(plyr)
install.packages("purrr")
library(plyr)
data2 <- by(choco$Rating, choco$Company.Location, mean)
data1 <- distinct(choco, Company.Location)
#data2342 <- tapply(choco$Rating, choco$Company.Location, mean)
#head(data2342)
data2 <- by(choco$Rating, choco$Company.Location, mean)
data2
#data1 <- data1 %>% mutate(AverageRate = tapply(choco$Rating, choco$Company.Location, mean)) %>% head()
#data2342 <- tapply(choco$Rating, choco$Company.Location, mean)
#head(data2342)
data2 <- ddply(choco, .(Company.Location), function(x) mean(x$Rating))
View(data2)
View(data2)
data2 <- ddply(choco, .(Company.Location), function(x) mean(x$Rating))
names(data2)[2] <- AverageRating
data2 <- ddply(choco, .(Company.Location), function(x) mean(x$Rating))
names(data2)[2] <- 'AverageRating'
View(data2)
data2 %>% ggplot(aes(x = Company.Location,y = AverageRating)) +
geom_bar()
data2 %>% ggplot(aes(x = Company.Location)) +
geom_bar(aes(weight = AverageRating))
data2 %>% ggplot(aes(x = Company.Location)) +
geom_bar(aes(weight = AverageRating)) +
coord_flip()
data2 <- ddply(choco, .(Company.Location), function(x) mean(x$Rating))
names(data2)[2] <- 'AverageRating'
level.reorder = levels(reorder(data2$Company.Location, data2$AverageRating, na.rm=TRUE))
rating.reorder = factor(data2$AverageRating, levels = level.reorder)
data2$AverageRating = rating.reorder
data2 %>% ggplot(aes(x = Company.Location)) +
geom_bar(aes(weight = AverageRating)) +
coord_flip()
data2 <- ddply(choco, .(Company.Location), function(x) mean(x$Rating))
names(data2)[2] <- 'AverageRating'
level.reorder = levels(reorder(data2$Company.Location, data2$AverageRating, fun = mean na.rm=TRUE))
data2 <- ddply(choco, .(Company.Location), function(x) mean(x$Rating))
names(data2)[2] <- 'AverageRating'
level.reorder = levels(reorder(data2$Company.Location, data2$AverageRating, fun = mean, na.rm=TRUE))
rating.reorder = factor(data2$AverageRating, levels = level.reorder)
data2$AverageRating = rating.reorder
data2 %>% ggplot(aes(x = Company.Location)) +
geom_bar(aes(weight = AverageRating)) +
coord_flip()
data2 <- ddply(choco, .(Company.Location), function(x) mean(x$Rating))
names(data2)[2] <- 'AverageRating'
data2 %>% ggplot(aes(x = Company.Location)) +
geom_bar(aes(weight = AverageRating)) +
coord_flip()
data2[which.max(data2$AverageRating),]
data2 <- ddply(choco, .(Company.Location), function(x) mean(x$Rating))
names(data2)[2] <- 'AverageRating'
data2 %>% ggplot(aes(x = Company.Location)) +
geom_bar(aes(weight = AverageRating)) +
coord_flip()
data2[which.max(data2$AverageRating),]
data2 %>% ggplot(aes(x = Company.Location)) +
geom_bar(aes(weight = AverageRating), position = position_dodge(0.9)) +
coord_flip()
data2 %>% ggplot(aes(x = Company.Location)) +
geom_bar(aes(weight = AverageRating), position = position_dodge(width=0.9)) +
coord_flip()
data2 %>% ggplot(aes(x = Company.Location)) +
geom_bar(aes(weight = AverageRating), position = position_dodge(width=2)) +
coord_flip()
data2 %>% ggplot(aes(x = Company.Location)) +
geom_bar(aes(weight = AverageRating)) +
coord_flip()
#group_by and mutate
fbi <- fbi %>% mutate(
Rate = Count/Pupulation * 70000, Type = factor(Type), Year = factor(Year)
)
source("~/Desktop/Iowa State University/Comp Sci/ds202/Class Notes/radarPlot.R", echo=TRUE)
#group_by and mutate
fbi <- fbi %>% mutate(
Rate = Count/Pupulation * 70000, Type = factor(Type), Year = factor(Year)
)
source("~/Desktop/Iowa State University/Comp Sci/ds202/Class Notes/radarPlot.R", echo=TRUE)
#group_by and mutate
fbi <- fbi %>% mutate(
Rate = Count/Pupulation * 70000, Type = factor(Type), Year = factor(Year)
)
#group_by and mutate
fbi <- fbi %>% mutate(
Rate = Count/Population * 70000, Type = factor(Type), Year = factor(Year)
)
View(fbi)
fbi1 = fbi %>% mutate(Type = reorder(Type, Rate, median, na.rm = TRUE))
View(fbi1)
levels(fbi1$Type)
gbi1 %>% ggplot(aes(x = Type, y = Rate)) +
geom_boxplot()
fbi1 %>% ggplot(aes(x = Type, y = Rate)) +
geom_boxplot()
fbi %>% filter(best == 1) %>% select(Type, State, Year, Rate)
fbi <- fbi %>% group_by(Type) %>% mutate(
best = rank(Rate) # ranks from lowest rate to highest rate
)
fbi %>% filter(best == 1) %>% select(Type, State, Year, Rate)
fbi1 = fbi1 %>% group_by(Type) %>% mutate(
best = rank(Rate) # ranks from lowest rate to highest rate
)
fbi %>% filter(best == 1) %>% select(Type, State, Year, Rate)
#group_by and mutate
fbi <- fbi %>% mutate(
Rate = Count/Population * 70000, Type = factor(Type), Year = factor(Year)
)
fbi1 = fbi %>% mutate(Type = reorder(Type, Rate, median, na.rm = TRUE))
levels(fbi1$Type)
fbi1 %>% ggplot(aes(x = Type, y = Rate)) +
geom_boxplot()
fbi1 = fbi1 %>% group_by(Type) %>% mutate(
best = rank(Rate) # ranks from lowest rate to highest rate
)
fbi %>% filter(best == 1) %>% select(Type, State, Year, Rate)
View(fbi1)
oup_by(Type, Year) %>% mutate(
best = rank(Rate) # ranks from lowest rate to highest rate
)
#
fbi1 = fbi1 %>% group_by(Type, Year) %>% mutate(
best = rank(Rate) # ranks from lowest rate to highest rate
)
fbi2 = fbi1 %>% filter(best < 4) %>% select(Type, State, Year, Rate, rank)
fbi2 = fbi1 %>% filter(best < 4) %>% select(Type, State, Year, Rate, best)
fbi2 %>% ggplot(aes(x = States)) +
geom_bar()
fbi2 %>% ggplot(aes(x = State)) +
geom_bar()
fbi2 %>% ggplot(aes(x = State)) +
geom_bar() +
coord_flip()
fbi2 %>% ggplot(aes(x = State)) +
geom_bar() +
facet_wrap(~Type) +
coord_flip()
fbi2 %>% ggplot(aes(x = State)) +
geom_bar() +
facet_wrap(~Type, scales = 3) +
coord_flip()
fbi2 %>% ggplot(aes(x = State)) +
geom_bar() +
facet_wrap(~Type, scale = 3) +
coord_flip()
fbi2 %>% ggplot(aes(x = State)) +
geom_bar() +
facet_wrap(~Type, scales = 3) +
coord_flip()
fbi2 %>% ggplot(aes(x = State)) +
geom_bar() +
facet_wrap(~Type, scales = 3.0) +
coord_flip()
fbi2 %>% ggplot(aes(x = State)) +
geom_bar() +
facet_wrap(~Type, scales = 3.0) +
coord_flip()
fbi2 %>% ggplot(aes(x = State)) +
geom_bar() +
facet_wrap(~Type, scales = 'free') +
coord_flip()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(classdata)
library(ggplot2)
HAPPY <- readRDS("data/HAPPY.rds")
HAPPY <- readRDS("data/happy.rds")
head(happy)
HAPPY <- readRDS("data/happy.rds")
View(HAPPY)
levels(as.factor(HAPPY$HAPPY))
