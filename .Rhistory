fbi3 = filter(fbi,Type = "Larceny.theft", State == "Iowa")
fbi3 %>% ggplot(aes(x = Year, y = Count / Population * 10^5)) +
geom_points() +
geom_line() +
ggtitle("Iowa Larceny theft rate over time")
fbi3 = filter(fbi,Type = "Larceny.theft", State == "Iowa")
fbi3 = filter(fbi, Type == "Larceny.theft", State == "Iowa")
fbi3 %>% ggplot(aes(x = Year, y = Count / Population * 10^5)) +
geom_points() +
geom_line() +
ggtitle("Iowa Larceny theft rate over time")
fbi3 %>% ggplot(aes(x = Year, y = Count / Population * 10^5)) +
geom_point() +
geom_line() +
ggtitle("Iowa Larceny theft rate over time")
fbi3 %>% ggplot(aes(x = Year, y = Count / Population * 10^5)) +
geom_point() +
geom_line() +
ylab("Rate per 10 thousand population") +
ggtitle("Iowa Larceny theft rate over time")
fbi4 = filter(fbi, Year = 2009)
fbi4 = filter(fbi, Year == 2009)
fbi4 = filter(fbi, Year == 2009)
fbi4 %>% ggplot(aes(x = crimes, y = State,)) +
geom_point() +
geom_line() +
ggtitle("")
fbi4 = filter(fbi, Year == 2009)
fbi4 %>% ggplot(aes(x = crimes, y = State)) +
geom_point() +
geom_line() +
ggtitle("")
fbi4 %>% ggplot(aes(x = State)) +
geom_bar(aes(weight = Count / Population * 10^5)) +
ggtitle("")
fbi4 %>% ggplot(aes(x = State)) +
geom_bar(aes(weight = Count / Population * 10^5)) +
coord_flip() +
ggtitle("")
fbi4 %>% ggplot(aes(x = State)) +
geom_bar(aes(weight = Count / Population * 10^5)) +
coord_flip() +
ylab("Rate per 10 thousand population")
fbi4 %>% ggplot(aes(x = State)) +
geom_bar(aes(weight = Count / Population * 10^5)) +
coord_flip() +
ylab("Rate per 10 thousand population") +
order_by()
fbi4 %>% ggplot(aes(x = State)) +
geom_bar(aes(weight = Count / Population * 10^5)) +
coord_flip() +
ylab("Rate per 10 thousand population") +
order_by(Count)
fbi4 %>% ggplot(aes(x = State)) +
geom_bar(aes(weight = Count / Population * 10^5)) +
coord_flip() +
ylab("Rate per 10 thousand population")
fbi5 = filter(fbi, Year < 2018 & Year > 2013)
View(fbi5)
fbi5 = filter(fbi, Year <= 2018 & Year > 2013)
View(fb5)
Vie(fbi5)
View(fbi5)
fbi5 = filter(fbi, Year <= 2018 & Year > 2013,
Type = "Murder.and.nonegligent.Manslaughter")
fbi5 = filter(fbi, Year > 2013,
Type == "Murder.and.nonegligent.Manslaughter")
View(fbi5)
fbi5 = filter(fbi, Year > 2013, Type == "Murder.and.nonegligent.Manslaughter")
view(fbi5)
unique(fbi$Type)
fbi5 = filter(fbi, Year > 2013, Type == "Murder.and.nonnegligent.Manslaughter")
View(fbi5)
fbi6 = filter(fbi5, Count / Population >= quan90)
quan90 = quantile(fbi5$Count / fbi5$Population, 0.9)
fbi6 = filter(fbi5, Count / Population >= quan90)
View(fbi6)
fib3$Rate = fib3$Count / fbi3$Population * 10^3
fbi3 = filter(fbi, Type == "Larceny.theft", State == "Iowa")
fbi3 %>% ggplot(aes(x = Year, y = Count / Population * 10^5)) +
geom_point() +
geom_line() +
ylab("Rate per 10 thousand population") +
ggtitle("Iowa Larceny theft rate over time")
fib3$Rate = fib3$Count / fbi3$Population * 10^3
fbi3$Rate = fbi3$Count / fbi3$Population * 10^3
View(fbi3)
diff(fbi3$Rate)
fbi3$Rate = fbi3$Count / fbi3$Population * 10^5
diff(fbi3$Rate)
fbi3$Rate.diff = diff(fbi3$Rate)
fbi3$Rate.diff =  c(NA, diff(fbi3$Rate))
filter(fbi3, Rate.diff < 0)
#updating a vector
a <- 1:4
a
a[2:3] <- 0
a[2:3] <- 0
a
replace(a, a == 0, -1)
a
gap = read.csv("gapminder-5060.csv")
gap = read.csv("Desktop\Iowa State University\Comp Sci\ds 202\Homework\Homework2\gapminder-5060.csv")
gap = read.csv("Desktop/Iowa State University/Comp Sci/ds 202/Homework/Homework2/gapminder-5060.csv")
gap = read.csv("Desktop/Iowa \State \University/Comp \Sci/ds \202/Homework/Homework \2/gapminder-5060.csv")
gap = read.csv("Desktop/Iowa State University/Comp \Sci/ds \202/Homework/Homework \2/gapminder-5060.csv")
gap = read.csv("Desktop/Iowa State University/Comp Sci/ds 202/Homework/Homework 2/gapminder-5060.csv")
gap = read.csv("Desktop/Iowa State University/Comp Sci/ds202/Homework/Homework 2/gapminder-5060.csv")
gap = read.csv("~/Desktop/Iowa State University/Comp Sci/ds202/Homework/Homework 2/gapminder-5060.csv")
filet(gap, country == "Canada", year = 1957)
filter(gap, country == "Canada", year = 1957)
filter(gap, country == "Canada", year == 1957)
replace(gap$lifeExp, (gap$country == "Canada") & (gap$year == 1957), 69.96)
gap$lifeExp = replace(gap$lifeExp, (gap$country == "Canada") & (gap$year == 1957), 69.96)
mpg
mpg&cty.europe = 235.21 / mpg&cty;
mpg&cty.europe = 235 / mpg&cty;
mpg&cty.europe = 235 / mpg&cty;
235 / mpg&cty;
235 / mpg&cty
mpg$cty * 8
mpg$cty.convert = mpg$cty * 8
mpg$cty.convert = mpg$cty /9
mpg$cty.convert = 9 / mpg$cty
mpg$cty.convert = 9 / mpg$cty
mpg$cty.convert = 235.21 / mpg$cty
mpg$hwy.convert = 235.21 / mpg$hwy
View(mpg)
mpg2008 = filter(mpg, year == 2008)
mpg2008
mpg2008 = filter(mpg, year == 2008)
mpg1999 = filter(mpg, year == 1999)
mpg1999 = filter(mpg, mpg&year == 1999)
mpg2008 = filter(mpg, year == 2008)
mpg1999 = filter(mpg, year == 1999)
View(fbi3)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tidyverse)
library(classdata)
unque(mpg)
unique(mpg)
colnames(mpg)
unique(mpg&year)
unique(mpg.year)
unique(year)
unique(mpg[c("year")])
mpg[c('hwy' )]
gap$lifeExp = replace(gap$lifeExp, (gap$country == "Canada") & (gap$year == 1957), 69.96)
gap$lifeExp = replace(gap$lifeExp, (gap$country == "Canada") & (gap$year == 1957), 69.96)
fbiwide1 = fbiwide[fbiwide$Year %in% c(1961, 1971, 1981, 1991, 2001, 2011), ]
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tidyverse)
library(classdata)
summary(mpg)
twoyear = dplyr::filter(fbi, Year %in% c(1961, 2014))
View(twoyear)
twoyear %>% ggplot(aes(x = Year, y = Count)) + geom_boxplot()
#fix -> make year a factor
twoyear %>% ggplot(aes(x = as.factor(Year), y = Count)) + geom_boxplot()
#fix -> make year a factor
twoyear %>% ggplot(aes(x = as.factor(Year), y = Count)) +
geom_boxplot() +
facet_wrap(~Type, scales = "free_year")
#fix -> make year a factor
twoyear %>% ggplot(aes(x = as.factor(Year), y = Count)) +
geom_boxplot() +
facet_wrap(~Type, scales = "free_x")
#fix -> make year a factor to only show the two years
twoyear %>% ggplot(aes(x = as.factor(Year), y = Count)) +
geom_boxplot() +
facet_wrap(~Type, scales = "free_y")
#Data Types checking and casting
temp = fbi$Year[1 : 10]
temp.ch = as.character(temo)
temp.ch = as.character(temp)
temp.factor = as.factor(temp) #numerical to factor
temp.factor = as.factor(temp.ch) #numerical to factor (gives us levels)
temp.ch.nu = as.numeric(temp.ch)
temp.ch.nu
temp.factor.nu = as.numeric(temp.factor) # from factor to numeric
temp.factor.nu
as.numeric(as.character(temp.factor))
fbi2018 = fbi %>% filter(Year == 2018, Type = "Murder.and.nonnegligent.Manslaugher")
fbi2018 = fbi %>% filter(Year == 2018, Type == "Murder.and.nonnegligent.Manslaugher")
fbi2018 %>% ggplot(aes(x = State)) +
geom_bar(aes(weight = Count)) +
coord_flip()
fbi2018 = fbi %>% filter(Year = 2018, Type == "Murder.and.nonnegligent.Manslaugher")
fbi2018 %>% ggplot(aes(x = State)) +
geom_bar(aes(weight = Count)) +
coord_flip()
fbi2018 = fbi %>% filter(Year == 2018, Type == "Murder.and.nonnegligent.Manslaugher")
fbi2018 %>% ggplot(aes(x = State)) +
geom_bar(aes(weight = Count)) +
coord_flip()
View(fbi2018)
fbi2018 = fbi %>% filter(Year == 2018, Type == "Murder.and.nonnegligent.Manslaugher")
View(fbi2018)
View(fbi)
View(fbi)
source("~/Desktop/Iowa State University/Comp Sci/ds202/logic.R", echo=TRUE)
source("~/Desktop/Iowa State University/Comp Sci/ds202/logic.R", echo=TRUE)
fbi2018 = fbi %>% filter(Year == 2018, Type == "Murder.and.nonnegligent.Manslaugher")
fbi2018 %>% ggplot(aes(x = State)) +
geom_bar(aes(weight = Count)) + coord_flip()
fbi2018 = fbi %>% filter(Year == 2018, Type == "Murder.and.nonnegligent.Manslaughter")
fbi2018 %>% ggplot(aes(x = State)) +
geom_bar(aes(weight = Count)) + coord_flip()
levels(fbi$Type)
temp = factors(fbi$Type, levels = c("Burglary",
"Larceny.theft",
"Motor.vehicle.theft",
"Robbery",
"Aggravated.assault",
"Legacy.rape",
"Rape",
"Murder.and.nonnegligent.Manslaughter"))
temp = factor(fbi$Type, levels = c("Burglary",
"Larceny.theft",
"Motor.vehicle.theft",
"Robbery",
"Aggravated.assault",
"Legacy.rape",
"Rape",
"Murder.and.nonnegligent.Manslaughter"))
fbi.temp = factor(fbi$Type, levels = c("Burglary",
"Larceny.theft",
"Motor.vehicle.theft",
"Robbery",
"Aggravated.assault",
"Legacy.rape",
"Rape",
"Murder.and.nonnegligent.Manslaughter"))
levels(fbi.temp)
#create a factor variable, even if fbi$Type is a factor this lets us see the levels
levels(fbi.temp) #manually reorder the levels of the factor
levels(reorder(fbi$State, fbi$Count, na.rm=TRUE))
levels(reorder(fbi2018$State, fbi2018$Count, na.rm=TRUE))
fbi2018 %>% ggplot(aes(x = State)) +
geom_bar(aes(weight = Count)) + coord_flip()
fbi2018 = levels(reorder(fbi2018$State, fbi2018$Count, na.rm=TRUE))
fbi2018 %>% ggplot(aes(x = State)) +
geom_bar(aes(weight = Count)) + coord_flip()
fbi2018 %% levels(reorder(fbi2018$State, fbi2018$Count, na.rm=TRUE))
fbi2018 %>% levels(reorder(fbi2018$State, fbi2018$Count, na.rm=TRUE))
levels(reorder(fbi2018$State, fbi2018$Count, na.rm=TRUE)) # na.rm=TRUE remove the NA values
levels(reorder(fbi2018$State, fbi2018$Count, na.rm=TRUE)) # na.rm=TRUE remove the NA values
levels(reorder(fbi$State, fbi$Count, na.rm=TRUE)) # na.rm=TRUE remove the NA values
levels(reorder(fbi$Type, fbi$Count, na.rm=TRUE)) # na.rm=TRUE remove the NA values
#order by the median count of each crime
levels(reorder(fbi$Type, fbi$Count, FUN = median, na.rm = TRUE))
#reorder the bar plot from smallest to largest by state and count
fbi2018 %>% reorder(State, Count, na.rm = TRUE)
#reorder the bar plot from smallest to largest by state and count
fbi2018 %>% reorder(State, fbi2018$Count, na.rm = TRUE)
#reorder the bar plot from smallest to largest by state and count
fbi2018 %>% reorder(State, fbiCount, na.rm = TRUE)
#reorder the bar plot from smallest to largest by state and count
fbi2018 %>% reorder(State, Count, na.rm = TRUE)
#reorder the bar plot from smallest to largest by state and count
fbi2018 = fbi %>% filter(Year == 2018, Type == "Murder.and.nonnegligent.Manslaughter")
fbi2018$State = as.factor(fbi2018$State)
str(mpg)
reorder(fbi2018$State, fbi2018$Count)
fbi2018 %>% ggplot(aes(x = State)) +
geom_bar(aes(weight = Count)) + coord_flip()
reorder(fbi2018$State, fbi2018$Count)
fbi2018$State = reorder(fbi2018$State, fbi2018$Count)
fbi2018 %>% ggplot(aes(x = State)) +
geom_bar(aes(weight = Count)) + coord_flip()
factor(fbi2018$State, levels = levels(reorder(fbi2018$State, fbi2018$Count)))
fbi2018 %>% ggplot(aes(x = State)) +
geom_bar(aes(weight = Count)) + coord_flip()
#reorder the bar plot from smallest to largest by state and count
fbi2018 = fbi %>% filter(Year == 2018, Type == "Murder.and.nonnegligent.Manslaughter")
fbi2018$State = as.factor(fbi2018$State) #first make it a factor to reorder it
factor(fbi2018$State, levels = levels(reorder(fbi2018$State, fbi2018$Count))) #reorder the variables using factor
fbi2018 %>% ggplot(aes(x = State)) +
geom_bar(aes(weight = Count)) + coord_flip()
#reorder the bar plot from smallest to largest by state and count
fbi2018 = fbi %>% filter(Year == 2018, Type == "Murder.and.nonnegligent.Manslaughter")
fbi2018$State = as.factor(fbi2018$State) #first make it a factor to reorder it
fbi2018$State = factor(fbi2018$State, levels = levels(reorder(fbi2018$State, fbi2018$Count))) #reorder the variables using factor
fbi2018 %>% ggplot(aes(x = State)) +
geom_bar(aes(weight = Count)) + coord_flip()
knitr::opts_chunk$set(echo = TRUE)
library(classdata)
library(tidyverse)
choco -> read.csv("choco.csv")
choco = read.csv("choco.csv")
choco
choco = read.csv("https://ds202-at-isu.github.io/labs/data/choco.csv")
knitr::opts_chunk$set(echo = TRUE)
library(classdata)
library(tidyverse)
library(ggplot2)
str(choco)
choco %>% ggplot(aes(x = Review.Date)) + geom_bar()
choco %>% ggplot(aes(x = as.factor(Review.Date))) + geom_bar()
choco %>% ggplot(aes(x = as.factor(Review.Date))) +
geom_bar() +
ggtitle() +
xlab("Year")
choco %>% ggplot(aes(x = as.factor(Review.Date))) +
geom_bar() +
ggtitle() +
xlabs("Year")
choco %>% ggplot(aes(x = as.factor(Review.Date))) +
geom_bar() +
ggtitle() +
xlab("Year")
choco %>% ggplot(aes(x = as.factor(Review.Date))) +
geom_bar() +
ggtitle("") +
xlab("Year")
devtools::install_github("heike/classdata")
ggplot(data = mpg, aes(x = class, y = cty)) +
geom_boxplot() +
ylab("City miles per gallon")
library(tidyverse)
library(classdata)
fbi$Type
crime.type = fbi$Type
levels(crime.type)
#first parameter = what we are reodering, second = based on what we are reodering
reorder(fbi$Type, fbi$Count, fun = mean, na.rm=TRUE)
#first parameter = what we are reodering, second = based on what we are reodering
levels(reorder(fbi$Type, fbi$Count, fun = mean, na.rm=TRUE))
#first parameter = what we are reodering, second = based on what we are reodering
level.reorder = levels(reorder(fbi$Type, fbi$Count, fun = mean, na.rm=TRUE))
crime.type.reorder = factor(crime.type, levels = level.reorder)
levels(crime.type.reorder)
crime.type.reorder[1 : 20]
crime.type[1 : 20]
crime.type.reorder[c(1, 1000, 3001, 10000)]
crime.type[c(1, 1000, 3001, 10000)]
#changing the level's names
levels(fbi$Type)
#changing the level's names
levels(crime.type.reorder)[1]
#changing the level's names
levels(crime.type.reorder)[1] = "Murder"
levels(crime.type.reorder)[1]
crime.type.reorder[c(1, 1000, 3001, 10000)]
crime.type.reorder[c(1, 1000, 3001, 10000)]
levels(crime.type)[1] = "Assault"
levels(crime.type)[5] = "Motor.theft"
levels(crime.type)[6] = "Murder"
crime.type - fbi$Type
levels(crime.type)[1] = "Assault"
levels(crime.type)[5] = "Motor.theft"
levels(crime.type)[6] = "Murder"
#Visualize factors
crime.type = fbi$Type
levels(crime.type)[1] = "Assault"
levels(crime.type)[5] = "Motor.theft"
levels(crime.type)[6] = "Murder"
library(ggplot2)
fbi$Type = crime.type
ggplot(fbi, aes(x = Type, fill= Year)) + geom_bar() #nothing happens
ggplot(fbi, aes(x = Type, fill= as.factor(Year))) + geom_bar()
ggplot(fbi, aes(x = Type, fill= as.factor(Year))) +
geom_bar(aes(weight = Count))
#reorder
level.reorder = levels(reorder(fbi$Type, fbi$Count, fun = mean, na.rm=TRUE))
crime.type.reorder = factor(crime.type, levels = levels.reoder)
fbi$Type = crime.type.reorder
ggplot(fbi, aes(x = Type, fill= as.factor(Year))) +
geom_bar(aes(weight = Count))
head(titanic)
ggplot(titanic, aes(x = Survived)) + geom_bar()
ggplot(titanic, aes(x = Sex)) + geom_bar()
ggplot(titanic, aes(x = Age)) + geom_bar()
ggplot(titanic, aes(x = Class)) + geom_bar()
ggplot(titanic, aes(x = Age)) + geom_bar(aes(weight = Survied))
ggplot(titanic, aes(x = Age)) + geom_bar(aes(weight = Survived))
ggplot(titanic, aes(x = Survived)) + geom_bar(aes(weight = Age))
ggplot(titanic, aes(x = Sex, fill = as.factor(Survived))) + geom_bar()
ggplot(titanic, aes(x = Sex, fill = as.factor(Survived))) +
geom_bar(position = "fill")
ggplot(titanic, aes(x = Sex, fill = as.factor(Survived))) +
geom_bar()
ggplot(titanic, aes(x = Sex, fill = as.factor(Survived))) +
geom_bar(position = "fill") #the fill shows proportions more clearly but doesn't show the number of survival
ggplot(titanic, aes(x = Sex, fill = as.factor(Survived))) +
geom_bar(position = "dodge")
ggplot(titanic, aes(x = Sex, fill = as.factor(Survived))) +
geom_bar(position = position_dodge()) #
ggplot(titanic, aes(x = Sex, fill = as.factor(Survived))) +
geom_bar(position = position_dodge2()) #shows side by side instead of stacking
ggplot(titanic, aes(x = Sex, fill = as.factor(Survived))) +
geom_bar(position = position_dodge()) #shows side by side instead of stacking
ggplot(titanic, aes(x = Sex, fill = as.factor(Survived))) +
geom_bar(position = position_dodge2()) #shows side by side instead of stacking
install.packages("ggmosaic")
#two and more factor variables
library(ggmosaic)
ggplot(data = titanic) +
geom_mosaic(aes(x = product(Sex), fill = Survived, weight = 1)) +
facet_grid(Age~Class)
#Fbi data
fbi1 = fbi[fbi$State %in% c("California", "New York"), ]
fbi1 = fbi1[fbi1$Year %in% c(1971, 2016), ]
View(fbi1)
View(fbi1)
levels(fbi1)[6] = "Murder"
levels(fbi1$Type)[6] = "Murder"
levels(fbi1$Type)
levels(fbi1$Type)[6]
#Fbi data, how to show relationship between class, gender, and survive?
fbi1 = fbi[fbi$State %in% c("California", "New York"), ]
fbi1 = fbi1[fbi1$Year %in% c(1971, 2016), ]
levels(fbi1$Type)
levels(fbi1$Type)
source("~/Desktop/Iowa State University/Comp Sci/ds202/Factors.R", echo=TRUE)
source("~/Desktop/Iowa State University/Comp Sci/ds202/Factors.R", echo=TRUE)
ggplot(data = fbi1, aes(x = State)) +
geom_bar(aes(weight = Count))
ggplot(data = fbi1, aes(x = State, fill=Type)) +
geom_bar(aes(weight = Count)) #total crimes in each state in the two years
ggplot(data = fbi1, aes(x = State, fill=Type)) +
geom_bar(aes(weight = Count), position = position_dodge()) #total crimes in each state in the two years
fbi1 = fbi1[fbi1$Year %in% c(1971, 2016), ]
ggplot(data = fbi1, aes(x = State, fill=Type)) +
geom_bar(aes(weight = Count), position = position_dodge()) #total crimes in each state in the two years
ggplot(data = fbi1, aes(x = State, fill=Type, color = as.factor(Year))) +
geom_bar(aes(weight = Count), position = position_dodge()) #total crimes in each state in the two years
ggplot(data = fbi1, aes(x = State, fill=Type)) +
geom_bar(aes(weight = Count), position = position_dodge()) + #total crimes in each state in the two years
facet_wrap(~Year)
source("~/Desktop/Iowa State University/Comp Sci/ds202/Class Notes/Factors.R", echo=TRUE)
ggplot(data = fbi1, aes(x = Type, fill = State)) +
geom_bar(aes(wiehgt = Count / Population * 10 ^ 5), position = position_dodge()) +
ylab("count") +
facet_wrap(~Year) + coord_flip()
ggplot(data = fbi1, aes(x = Type, fill = State)) +
geom_bar(aes(weight = Count / Population * 10 ^ 5), position = position_dodge()) +
ylab("count") +
facet_wrap(~Year) + coord_flip()
head(iris)
source("~/Desktop/Iowa State University/Comp Sci/ds202/Class Notes/radarPlot.R", echo=TRUE)
source("~/Desktop/Iowa State University/Comp Sci/ds202/Class Notes/radarPlot.R", echo=TRUE)
ggplot(mean.iris, aes(x = variable, y = value)) +
geom_polygon(aes(group = Species, color = Species), fill = NA, size = 2) +
geom_line(aes(group = Species, color = Species), size = 2) +
facet_wrap(~ Species) +
theme(strip.text.x = element_text(size = rel(0.8)),
axis.text.x = element_text(size = rel(0.8)),
axis.ticks.y = element_blank(),
axis.text.y = element_blank()) +
xlab("") + ylab("") +
guides(color = "none") +
coord_radar()
ggplot(mean.iris, aes(x = variable, y = value)) +
geom_polygon(aes(group = Species, color = Species), fill = NA, size = 2, show.legend = FALSE) +
geom_line(aes(group = Species, color = Species), size = 2) +
theme(strip.text.x = element_text(size = rel(0.8)),
axis.text.x = element_text(size = rel(0.8)),
axis.ticks.y = element_blank(),
axis.text.y = element_blank()) +
xlab("") + ylab("") +
guides(color = guide_legend(ncol=2)) +
coord_radar()
ggplot(data = filter(fbi, Type=="Murder.and.nonnegligent.Manslaughter"),
aes(x = Year, y = Count)) + geom_point()
View(fbi)
View(fbi)
ggplot(data = filter(fbi, Type=="Murder"),
aes(x = Year, y = Count)) + geom_point()
fbi %>%
filter(Type=="Murder") %>%
ggplot(aes(x = Year, y = Count)) +
geom_point()
ggplot(data = filter(fbi, Type=="Murder"),
aes(x = Year, y = Count)) + geom_point()
fbi %>%
filter(Type=="Murder") %>%
ggplot(aes(x = Year, y = Count)) +
geom_point()
fbi %>% flter(Type == "Burglary", Year == 2014) %>% head()
fbi %>% filter(Type == "Burglary", Year == 2014) %>% head()
#arrange function, sorts the data by the values in one or more variables
fbi %>% arrange(desc(Year), Type, desc(Count)) %>% head()
#select
fbi %>% arrange(desc(Year), Type, desc(Count)) %>%
select(Typem Count, Year) %>% head()
#select
fbi %>% arrange(desc(Year), Type, desc(Count)) %>%
select(Type, Count, Year) %>% head()
#select
fbi %>% arrange(desc(Year), Type, desc(Count)) %>%
select(Type, Count, Year) %>% head()
#mutate
fbi %>% mutate(Rate = Count/Population * 70000) %>% head()
#summarise - observations into a (set of ) ont-number statistic(s)
fbi %>%
summarise(mean_rate= mean(Count/Population * 70000, na.rm = TRUE),
sd_rate = sd(Count/population*70000, na.rm=TRUE))
#summarise - observations into a (set of ) one-number statistic(s)
fbi %>%
summarise(mean_rate= mean(Count/Population * 70000, na.rm = TRUE),
sd_rate = sd(Count/population*70000, na.rm=TRUE))
#summarise - observations into a (set of ) one-number statistic(s)
fbi %>%
summarise(mean_rate= mean(Count/Population * 70000, na.rm = TRUE),
sd_rate = sd(Count/Population*70000, na.rm=TRUE))
fbi %>%
group_by(Type) %>%
summarise(mean_rate = mean(Count/Population*70000, na.rm=TRUE),
sd_rate = sd(Count/Population*70000, na.rm = TRUE))
