happy %>% mutate(DEGREE = factor(DEGREE, levels = c("LT HIGH SCHOOL",
"HIGH SCHOOL",
"JUNIOR COLLEGE",
"GRADUATE",
"BACHELOR")))
levels(happy$DEGREE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(classdata)
library(ggplot2)
happy <- readRDS("data/happy.rds")
happy[happy == "IAP"] <- NA
happy[happy == "DK"] <- NA
happy[happy == "NA"] <- NA
#another way to do it -> happy = replace(happy, happy == "IAP", NA) {do for each one}
str(happy)
happy$AGE[happy$AGE == "89 OR OLDER"] <- "89"
happy$AGE = as.numeric(happy$AGE)
happy$HAPPY = as.factor(happy$HAPPY)
happy$MARITAL = as.factor(happy$MARITAL)
happy$HEALTH = as.factor(happy$HEALTH)
happy$DEGREE = as.factor(happy$DEGREE)
happy$SEX = as.factor(happy$SEX)
happy$FINRELA = as.factor(happy$FINRELA)
happy$PARTYID = as.factor(happy$PARTYID)
happy = happy %>% mutate(DEGREE = factor(DEGREE, levels = c("LT HIGH SCHOOL",
"HIGH SCHOOL",
"JUNIOR COLLEGE",
"GRADUATE",
"BACHELOR")))
levels(happy$DEGREE)
levels(happy$HEALTH)
levels(happy$FINRELA)
happy = happy %>% mutate(DEGREE = factor(DEGREE, levels = c("LT HIGH SCHOOL","HIGH SCHOOL", "JUNIOR COLLEGE", "GRADUATE",
"BACHELOR"))) %>%
mutate(FINRELA, levels = c("FAR BELOW AVERAGE", "BELOW AVERAGE", "AVERAGE", "ABOVE AVERAGE", "FAR ABOVE AVERAGE")) %>%
mutate(HEALTH, levels = c("POOR", "FAIR", "EXCELLENT", "GOOD"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(classdata)
library(ggplot2)
happy <- readRDS("data/happy.rds")
happy[happy == "IAP"] <- NA
happy[happy == "DK"] <- NA
happy[happy == "NA"] <- NA
#another way to do it -> happy = replace(happy, happy == "IAP", NA) {do for each one}
str(happy)
happy$AGE[happy$AGE == "89 OR OLDER"] <- "89"
happy$AGE = as.numeric(happy$AGE)
happy$HAPPY = as.factor(happy$HAPPY)
happy$MARITAL = as.factor(happy$MARITAL)
happy$HEALTH = as.factor(happy$HEALTH)
happy$DEGREE = as.factor(happy$DEGREE)
happy$SEX = as.factor(happy$SEX)
happy$FINRELA = as.factor(happy$FINRELA)
happy$PARTYID = as.factor(happy$PARTYID)
levels(happy$FINRELA)
happy = happy %>% mutate(DEGREE = factor(DEGREE, levels = c("LT HIGH SCHOOL","HIGH SCHOOL", "JUNIOR COLLEGE", "GRADUATE",
"BACHELOR"))) %>%
mutate(FINRELA, levels = c("FAR BELOW AVERAGE", "BELOW AVERAGE", "AVERAGE", "ABOVE AVERAGE", "FAR ABOVE AVERAGE")) %>%
mutate(HEALTH, levels = c("POOR", "FAIR", "EXCELLENT", "GOOD"))
happy = happy %>% mutate(DEGREE = factor(DEGREE, levels = c("LT HIGH SCHOOL","HIGH SCHOOL", "JUNIOR COLLEGE", "GRADUATE",
"BACHELOR"))) %>%
mutate(FINRELA = factor(FINRELA, levels = c("FAR BELOW AVERAGE", "BELOW AVERAGE", "AVERAGE", "ABOVE AVERAGE", "FAR ABOVE
AVERAGE"))) %>%
mutate(HEALTH= factor(HEALTH, levels = c("POOR", "FAIR", "EXCELLENT", "GOOD")))
levels(happy$FINRELA)
levels(happy$HEALTH)
levels(happy$DEGREE)
levels(happy$FINRELA)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(classdata)
library(ggplot2)
happy <- readRDS("data/happy.rds")
happy[happy == "IAP"] <- NA
happy[happy == "DK"] <- NA
happy[happy == "NA"] <- NA
#another way to do it -> happy = replace(happy, happy == "IAP", NA) {do for each one}
str(happy)
happy$AGE[happy$AGE == "89 OR OLDER"] <- "89"
happy$AGE = as.numeric(happy$AGE)
happy$HAPPY = as.factor(happy$HAPPY)
happy$MARITAL = as.factor(happy$MARITAL)
happy$HEALTH = as.factor(happy$HEALTH)
happy$DEGREE = as.factor(happy$DEGREE)
happy$SEX = as.factor(happy$SEX)
happy$FINRELA = as.factor(happy$FINRELA)
happy$PARTYID = as.factor(happy$PARTYID)
happy = happy %>% mutate(DEGREE = factor(DEGREE, levels = c("LT HIGH SCHOOL","HIGH SCHOOL", "JUNIOR COLLEGE", "GRADUATE",
"BACHELOR"))) %>%
mutate(FINRELA = factor(FINRELA, levels = c("FAR BELOW AVERAGE", "BELOW AVERAGE", "AVERAGE", "ABOVE AVERAGE",
"FAR ABOVE AVERAGE"))) %>%
mutate(HEALTH= factor(HEALTH, levels = c("POOR", "FAIR", "EXCELLENT", "GOOD")))
levels(happy$FINRELA)
tips %>% ggplot() +
goem_box()
fbi1 %>% ggplot(aes(x = Type, y = Rate)) +
geom_boxplot()
tips %>% ggplot(aes(x = day)) +
geom_bar(weight = gender)
tips %>% ggplot(aes(x = day)) +
geom_bar(weight = sex)
tips %>% ggplot(aes(x = day)) +
geom_bar(weight = tips$sex)
tips %>% ggplot(aes(x = day, fill = sex)) +
geom_bar(weight = tips$sex)
tips %>% ggplot(aes(x = day, fill = sex)) +
geom_bar(weight = tips$sex)
tips %>% ggplot(aes(x = day, fill = sex)) +
geom_bar()
fbi2 %>% ggplot(aes(x = State)) +
geom_bar() +
facet_wrap(~Type, scales = 'free') +
coord_flip()
ggplot(fbi, aes(x = Type, fill= as.factor(Year))) +
geom_bar(aes(weight = Count))
ggplot(data = fbi1, aes(x = Type, fill = State)) +
geom_bar(aes(weight = Count / Population * 10 ^ 5), position = position_dodge()) +
ylab("count") +
facet_wrap(~Year) + coord_flip()
tips %>% ggplot(aes(x = day, fill = sex), position = position_dodge()) +
geom_bar()
tips %>% ggplot(aes(x = day, fill = sex), position = position_dodge()) +
geom_bar()
tips %>% ggplot(aes(x = day, fill = sex)) +
geom_bar(position = position_dodge())
tips %>% ggplot(aes(x = day, fill = sex)) +
geom_bar(aes(weight = sex),position = position_dodge())
tips %>% ggplot(aes(x = day, fill = sex)) +
geom_bar(position = position_dodge())
View(tips)
tips$tiprate = (tips$tip / tips$total_bill) * 100
View(tips)
tips[tips$tiprate == max(tips$tiprate),]
tips[tips$tiprate == min(tips$tiprate),]
mean(tips$tiprate)
tips[tips$tiprate == max(tips$tiprate),]
tips[tips$tiprate == min(tips$tiprate),]
tips %>% ggplot(aes(x = sex)) +
facet_wrap(~smoker) +
goem_bar()
tips %>% ggplot(aes(x = sex)) +
facet_wrap(~smoker) +
geom_bar()
mean.iris <-
iris %>%
group_by(Species) %>%
summarise_all("mean") %>%
melt()
source("~/Desktop/Iowa State University/Comp Sci/ds202/Class Notes/radarPlot.R", echo=TRUE)
mean.iris <-
iris %>%
group_by(Species) %>%
summarise_all("mean") %>%
melt()
coord_radar <- function (theta = "x", start = 0, direction = 1)
{
theta <- match.arg(theta, c("x", "y"))
r <- if (theta == "x")
"y"
else "x"
ggproto("CordRadar", CoordPolar, theta = theta, r = r, start = start,
direction = sign(direction),
is_linear = function(coord) TRUE)
}
ggplot(mean.iris, aes(x = variable, y = value)) +
geom_polygon(aes(group = Species, color = Species), fill = NA, size = 2) +
geom_line(aes(group = Species, color = Species), size = 2) +
facet_wrap(~ Species) +
theme(strip.text.x = element_text(size = rel(0.8)),
axis.text.x = element_text(size = rel(0.8)),
axis.ticks.y = element_blank(),
axis.text.y = element_blank()) +
xlab("") + ylab("") +
guides(color = "none") +
coord_radar()
ggplot(mean.iris, aes(x = variable, y = value)) +
geom_polygon(aes(group = Species, color = Species), fill = NA, size = 2, show.legend = FALSE) +
geom_line(aes(group = Species, color = Species), size = 2) +
theme(strip.text.x = element_text(size = rel(0.8)),
axis.text.x = element_text(size = rel(0.8)),
axis.ticks.y = element_blank(),
axis.text.y = element_blank()) +
xlab("") + ylab("") +
guides(color = guide_legend(ncol=2)) +
coord_radar()
#two ways to graph the same thing
ggplot(data = filter(fbi, Type=="Murder"),
aes(x = Year, y = Count)) + geom_point()
fbi %>%  #pipe operator
filter(Type=="Murder") %>%
ggplot(aes(x = Year, y = Count)) +
geom_point()
fbi %>% filter(Type == "Burglary", Year == 2014) %>% head()
#arrange function, sorts the data by the values in one or more variables
fbi %>% arrange(desc(Year), Type, desc(Count)) %>% head()
#select
fbi %>% arrange(desc(Year), Type, desc(Count)) %>%
select(Type, Count, Year) %>% head()
#summarize function - observations into a (set of ) one-number statistic(s)
fbi %>%
summarise(mean_rate= mean(Count/Population * 70000, na.rm = TRUE),
sd_rate = sd(Count/Population*70000, na.rm=TRUE))
fbi %>% #summarize and group_by
group_by(Type) %>%
summarise(mean_rate = mean(Count/Population*70000, na.rm=TRUE),
sd_rate = sd(Count/Population*70000, na.rm = TRUE))
#group_by and mutate
fbi <- fbi %>% mutate(
Rate = Count/Population * 70000, Type = factor(Type), Year = factor(Year)
)
fbi1 = fbi %>% mutate(Type = reorder(Type, Rate, median, na.rm = TRUE))
levels(fbi1$Type)
fbi1 %>% ggplot(aes(x = Type, y = Rate)) +
geom_boxplot()
fbi1 = fbi1 %>% group_by(Type) %>% mutate(
best = rank(Rate) # ranks from lowest rate to highest rate // (rank(-Rate)) <- highest to lowest
)
fbi %>% filter(best == 1) %>% select(Type, State, Year, Rate)
# how many times the states appeared in the top for crime
fbi1 = fbi1 %>% group_by(Type, Year) %>% mutate(
best = rank(Rate) # ranks from lowest rate to highest rate
)
fbi2 = fbi1 %>% filter(best < 4) %>% select(Type, State, Year, Rate, best)
fbi2 %>% ggplot(aes(x = State)) +
geom_bar() +
facet_wrap(~Type, scales = 'free') +
coord_flip()
# French Fries Data
data(french_fries, package="reshape2")
french_fries.mean =
french_fries %>% group_by(time) %>% summarise(
m.potato = mean(potato, na.rm=TRUE),
m.buttery = mean(buttery, na.rm=TRUE),
m.grassy = mean(grassy, na.rm=TRUE),
m.rancid = mean(rancid, na.rm=TRUE),
m.painty = mean(painty, na.rm=TRUE)
)
french_fries.mean %>% mutate(time = as.numeric(as.character(time))) %>%
ggplot(aes(x = time)) +
geom_point(aes(y = m.potato)) +
geom_point(shape=2, aes(y=m.rancid)) +
geom_point(shape=3, aes(y=m.painty)) +
geom_line(aes(x=time, y=m.potato)) +
geom_line(linetype = 2, aes(x=time, y=m.rancid)) +
geom_line(linetype = 3, aes(x=time, y=m.painty)) +
ylab("Average")
source("~/Desktop/Iowa State University/Comp Sci/ds202/Class Notes/Factors.R", echo=TRUE)
crime.type = fbi$Type
levels(crime.type)
#first parameter = what we are reordering, second = based on what we are reordering
level.reorder = levels(reorder(fbi$Type, fbi$Count, fun = mean, na.rm=TRUE))
#create a new factor, based on original factor but the levels are corresponding to the new levels
crime.type.reorder = factor(crime.type, levels = level.reorder)
crime.type.reorder[c(1, 1000, 3001, 10000)]
crime.type[c(1, 1000, 3001, 10000)]
#changing the level's names
levels(crime.type.reorder)[1] = "Murder" #don't forget to put `levels` to change the first level and not the first element
crime.type.reorder[c(1, 1000, 3001, 10000)]
#Visualize factors
crime.type = fbi$Type
levels(crime.type)[1] = "Assault"
levels(crime.type)[5] = "Motor.theft"
levels(crime.type)[6] = "Murder"
fbi$Type = crime.type
ggplot(fbi, aes(x = Type, fill= Year)) + geom_bar() #nothing happens, forgot to make a bar plot for count
ggplot(fbi, aes(x = Type, fill= as.factor(Year))) +
geom_bar(aes(weight = Count))
#reorder
level.reorder = levels(reorder(fbi$Type, fbi$Count, fun = mean, na.rm=TRUE))
crime.type.reorder = factor(crime.type, levels = level.reorder)
fbi$Type = crime.type.reorder
ggplot(fbi, aes(x = Type, fill= as.factor(Year))) +
geom_bar(aes(weight = Count))
#Survival on the Titanic, new data set
head(titanic)
ggplot(titanic, aes(x = Survived)) + geom_bar()
ggplot(titanic, aes(x = Sex)) + geom_bar()
ggplot(titanic, aes(x = Age)) + geom_bar()
ggplot(titanic, aes(x = Class)) + geom_bar()
ggplot(titanic, aes(x = Sex, fill = as.factor(Survived))) +
geom_bar()
ggplot(titanic, aes(x = Sex, fill = as.factor(Survived))) +
geom_bar(position = "fill") #the fill shows proportions more clearly but doesn't show the number of survival
ggplot(titanic, aes(x = Sex, fill = as.factor(Survived))) +
geom_bar(position = position_dodge2()) #shows side by side instead of stacking
#two and more factor variables
library(ggmosaic)
ggplot(data = titanic) +
geom_mosaic(aes(x = product(Sex), fill = Survived, weight = 1)) +
facet_grid(Age~Class)
#Fbi data, how to show relationship between class, gender, and survive?
fbi1 = fbi[fbi$State %in% c("California", "New York"), ]
fbi1 = fbi1[fbi1$Year %in% c(1971, 2016), ]
ggplot(data = fbi1, aes(x = State, fill=Type)) +
geom_bar(aes(weight = Count), position = position_dodge()) + #total crimes in each state in the two years
facet_wrap(~Year)
ggplot(data = fbi1, aes(x = Type, fill = State)) +
geom_bar(aes(weight = Count / Population * 10 ^ 5), position = position_dodge()) +
ylab("count") +
facet_wrap(~Year) + coord_flip()
tips[tips$tiprate == max(tips$tiprate),]
tips[tips$tiprate == min(tips$tiprate),]
tips[tips$tiprate == max(tips$tiprate),]
tips %>% ggplot(aes(x = sex, y = tiprate)) +
facet_wrap(~smoker) +
geom_bar()
tips %>% ggplot(aes(x = sex)) +
facet_wrap(~smoker) +
geom_bar(aes(weight = tiprate))
tips %>% ggplot(aes(x = sex)) +
facet_wrap(~smoker) +
geom_bar(aes(weight = tiprate))
tips %>% ggplot(aes(x = sex)) +
facet_wrap(~smoker) +
geom_bar(aes(weight = mean(tiprate)))
tips %>% ggplot(aes(x = sex)) +
facet_wrap(~smoker) +
geom_bar(aes(weight = mean(tiprate)))
tips %>% ggplot(aes(x = sex)) +
facet_wrap(~smoker) +
geom_bar(aes(weight = tiprate / 224))
mean(tips$tiprate)
tips %>% ggplot(aes(x = tip, y = total_bill, color = (sex, smoker))) +
french_fries.mean %>% mutate(time = as.numeric(as.character(time))) %>%
ggplot(aes(x = time)) +
geom_point(aes(y = m.potato)) +
geom_point(shape=2, aes(y=m.rancid)) +
geom_point(shape=3, aes(y=m.painty)) +
geom_line(aes(x=time, y=m.potato)) +
geom_line(linetype = 2, aes(x=time, y=m.rancid)) +
geom_line(linetype = 3, aes(x=time, y=m.painty)) +
ylab("Average")
# do ratings of potato-y show a difference between the different oils over time?
# draw a plot of the average rating by time, color by treatment.
# how does this plot look like for the rancid rating?
french_fries.trt.mean =
french_fries %>% group_by(time, treatment) %>% summarise(
m.potato = mean(potato, na.rm=TRUE),
m.buttery = mean(buttery, na.rm=TRUE),
m.grassy = mean(grassy, na.rm=TRUE),
m.rancid = mean(rancid, na.rm=TRUE),
m.painty = mean(painty, na.rm=TRUE)
)
french_fries.trt.mean %>% mutate(time = as.numeric(as.character(time))) %>%
ggplot(aes(x = time, col = treatment)) +
geom_point(aes(y = m.potato)) +
geom_point(shape=2, aes(y=m.rancid)) +
geom_point(shape=3, aes(y=m.painty)) +
geom_line(aes(x=time, y=m.potato)) +
geom_line(linetype = 2, aes(x=time, y=m.rancid)) +
geom_line(linetype = 3, aes(x=time, y=m.painty)) +
ylab("Average")
tips1 = tips %>% group_by(sex, smoker)
View(tips1)
fbi2 %>% ggplot(aes(x = State)) +
geom_bar() +
facet_wrap(~Type, scales = 'free') +
coord_flip()
View(tips1)
View(fbi1)
?summarise
tips %>% ggplot(aes(x = sex)) +
facet_wrap(~smoker) +
geom_bar(aes(weight = tiprate / 224))
tips1 = tips %>% group_by(sex, smoker) %>% mutate()
tips2 <- rips %>% group_by(sex, smoker) %>% mutate(row_number(), groups = paste(sex,count,sep=""))
tips %>% ggplot(aes(x = sex)) +
facet_wrap(~smoker) +
geom_bar(aes(weight = tiprate / 224))
tips1 = tips %>% group_by(sex, smoker) %>% mutate()
tips2 <- tips %>% group_by(sex, smoker) %>% mutate(row_number(), groups = paste(sex,count,sep=""))
tips %>% ggplot(aes(x = sex)) +
facet_wrap(~smoker) +
geom_bar(aes(weight = tiprate / 224))
tips1 = tips %>% group_by(sex, smoker) %>% mutate()
tips2 <- tips %>% group_by(sex, smoker) %>% mutate(groups = paste(sex,smoker,sep=""))
tips %>% ggplot(aes(x = tip, y = total_bill, color = (sex, smoker))) +
View(tips2)
tips1 <- tips %>% group_by(sex, smoker) %>% mutate(groups = paste(sex,smoker,sep=" "))
tips %>% ggplot(aes(x = sex)) +
facet_wrap(~smoker) +
geom_bar(aes(weight = tiprate / 224))
tips1 <- tips %>% group_by(sex, smoker) %>% mutate(groups = paste(sex,smoker,sep=" "))
tips %>% ggplot(aes(x = tip, y = total_bill, color = (sex, smoker))) +
tips %>% ggplot(aes(x = tip, y = total_bill, color = groups)) +
geom_point()
tips %>% ggplot(aes(x = sex)) +
facet_wrap(~smoker) +
geom_bar(aes(weight = tiprate / 224))
tips1 <- tips %>% group_by(sex, smoker) %>% mutate(groups = paste(sex,smoker,sep=" "))
tips1 %>% ggplot(aes(x = tip1, y = total_bill, color = groups)) +
geom_point()
tips %>% ggplot(aes(x = sex)) +
facet_wrap(~smoker) +
geom_bar(aes(weight = tiprate / 224))
tips1 <- tips %>% group_by(sex, smoker) %>% mutate(groups = paste(sex,smoker,sep=" "))
tips1 %>% ggplot(aes(x = tips1, y = total_bill, color = groups)) +
geom_point()
tips %>% ggplot(aes(x = sex)) +
facet_wrap(~smoker) +
geom_bar(aes(weight = tiprate / 224))
tips1 <- tips %>% group_by(sex, smoker) %>% mutate(groups = paste(sex,smoker,sep=" "))
tips1 %>% ggplot(aes(x = tip, y = total_bill, color = groups)) +
geom_point()
tips %>% ggplot(aes(x = day)) +
geom_bar(aes(weight = tiprate))
tips %>% ggplot(aes(x = day)) +
geom_bar(aes(weight = mean(tiprate)))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(classdata)
library(ggplot2)
tips %>% ggplot(aes(x = day)) +
geom_bar(aes(weight = mean(tiprate)))
tips %>% ggplot(aes(x = day)) +
geom_bar(aes(weight = mean(tiprate))) +
ylab("TipRate")
library(plyr)
knitr::opts_chunk$set(echo = TRUE)
library(classdata)
library(tidyverse)
library(ggplot2)
library(plyr)
choco = read.csv("https://ds202-at-isu.github.io/labs/data/choco.csv")
str(choco)
choco %>% ggplot(aes(x = as.factor(Review.Date))) +
geom_bar() +
ggtitle("") +
xlab("Year")
choco %>% ggplot(aes(x = as.factor(Rating))) +
geom_bar() +
ggtitle("") +
xlab("Year")
boxplot.stats(choco$Rating)$out
choco %>% ggplot(aes(x = Cocoa.Pct, y = Rating)) +
geom_point()
data1 <- choco[, c(5, 7)]
round(cor(data1), 2)
choco1 <- dplyr::filter(choco, Company.Location %in% c("U.S.A.","France", "Canada"))
choco2 <- dplyr::filter(choco, Company.Location %in% c("U.S.A."))
choco3 <- dplyr::filter(choco, Company.Location %in% c("Canada"))
choco4 <- dplyr::filter(choco, Company.Location %in% c("France"))
ggplot(data = choco1, aes(x = Company.Location)) +
geom_bar(aes(weight = Rating), position = position_dodge()) +
facet_wrap(~Rating)
str(choco2) # USA  - 787
str(choco3) # Canada - 132
str(choco4) # France - 158
mean(choco2$Rating)
mean(choco3$Rating)
mean(choco4$Rating)
data2 <- ddply(choco, .(Company.Location), function(x) mean(x$Rating))
names(data2)[2] <- 'AverageRating'
data2 %>% ggplot(aes(x = Company.Location)) +
geom_bar(aes(weight = AverageRating)) +
coord_flip()
data2[which.max(data2$AverageRating),]
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(classdata)
library(ggplot2)
library(plyr)
data(tips, package="reshape2")
str(tips)
tips$size.factor = as.factor(tips$size)
levels(tips$size.factor)
tips %>% ggplot(aes(x = tip, y = total_bill)) +
geom_point()
tips$tiprate = (tips$tip / tips$total_bill) * 100
tips[tips$tiprate == max(tips$tiprate),]
tips[tips$tiprate == min(tips$tiprate),]
mean(tips$tiprate)
tips1 <- tips %>% group_by(sex, smoker) %>% mutate(groups = paste(sex,smoker,sep=" "))
tips1 %>% ggplot(aes(x = tip, y = total_bill, color = groups)) +
geom_point()
tips %>% ggplot(aes(x = day, fill = sex)) +
geom_bar(position = position_dodge())
tips2 <- ddply(tips, .(days), function(x) mean(x$tiprate))
tips2 <- ddply(tips, .(days), function(x) mean(x$tiprate))
tips2 <- ddply(tips, .(day), function(x) mean(x$tiprate))
names(tips2)[2] <- 'AverageRating'
View(tips2)
ylab("TipRate")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(classdata)
library(ggplot2)
library(plyr)
data(tips, package="reshape2")
str(tips)
tips$size.factor = as.factor(tips$size)
levels(tips$size.factor)
tips %>% ggplot(aes(x = tip, y = total_bill)) +
geom_point()
tips$tiprate = (tips$tip / tips$total_bill) * 100
tips[tips$tiprate == max(tips$tiprate),]
tips[tips$tiprate == min(tips$tiprate),]
mean(tips$tiprate)
tips1 <- tips %>% group_by(sex, smoker) %>% mutate(groups = paste(sex,smoker,sep=" "))
tips1 %>% ggplot(aes(x = tip, y = total_bill, color = groups)) +
geom_point()
tips %>% ggplot(aes(x = day, fill = sex)) +
geom_bar(position = position_dodge())
tips2 <- ddply(tips, .(day), function(x) mean(x$tiprate))
names(tips2)[2] <- 'AverageRating'
tips2 %>% ggplot(aes(x = day)) +
geom_bar(aes(weight = AverageRating))) +
tips2 %>% ggplot(aes(x = day)) +
geom_bar(aes(weight = AverageRating)) +
ylab("TipRate")
