av3 = av %>% gather(key = Time, value = Return, c(12,14,16,18,20))
av3 = av3 %>% mutate((Time = parse_number(Time))
View(av3)
View(av3)
av3 = av3 %>% mutate(Time = parse_number(Time))
View(av3)
View(av1)
av4 = av3 %>% select(Name.Alias, Time, Return)
av.neat = left_join(av2, av4, by = c("Names.Alias", "Time"))
av.neat = left_join(av2, av4, by = c("Name.Alias", "Time"))
View(av.neat)
av0 = av %>% filter(Name.Alias != "")
av <- read.csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/avengers/avengers.csv", stringsAsFactors = FALSE)
names(av) # columns
av0 = av %>% filter(Name.Alias != "")
av1 = av0 %>% gather(key = Time, value = Death, c(11, 13, 15, 17, 19)) %>%
select(Name.Alias, time, death) %>%
mutate(time = parse_number(time))
av1 = av0 %>% gather(key = time, value = death, c(11, 13, 15, 17, 19)) %>%
select(Name.Alias, time, death) %>%
mutate(time = parse_number(time))
av0 = av0 %>% filter(Name.Alias != "Vance Astrovik")
av1 = av0 %>% gather(key = time, value = death, c(11, 13, 15, 17, 19)) %>%
select(Name.Alias, time, death) %>%
mutate(time = parse_number(time))
av2 = av0 %>% gather(key = time, value = return, c(12, 14, 16, 18, 20)) %>%
select(Name.Alias, time, return) %>%
mutate(time = parse_number(time))
av.neat = left_join(av1, av2, by = c("Name.Alias", "time"))
View(av.neat)
library(lubridate)
mdy("03-01-2018")
mdy("03-01-2018") + 1
mdy("03-01-2018") + 1 # get the next date
source("~/Desktop/Iowa State University/Comp Sci/ds202/Class Notes/date_time.R", echo=TRUE)
end_date - days(10)
ymd("22-4-4")
ymd_hms(03 01 2018 10 30 20)
ymd_hms("03 01 2018 10 30 20")
end_date <- now()
month(now())
wday(now(), label = TRUE)
wday(now(), label = TRUE) # current day
year(now())
year(now()) #current year
# Intervals and Durations
end_date <- now()
# Intervals and Durations
now() + years(1) # give us next year with the rest of the data the same
end_date <- now()
span <- end_date - years(1)
span
# Example: Movies
library(classdata)
summary(box$Date) # date variable: allows date calculus
summary(box$Date) # date variable: allows date calculus
box %>% ggplot(aes(x = Date)) + geom_histogram(binwidth=7)
box %>% ggplot(aes(x = month(Date, label=TRUE))) + geom_bar()
# inspect the budget data set from the classdata package
View(budget)
# make sure the variable Release Date is a date format
str(budget)
# plot a histogram of the variable
budget %>% ggplot(aes(x = month(Date, label=TRUE))) + geom_bar()
# plot a histogram of the variable
budget %>% ggplot(aes(x = Date)) + geom_bar()
View(budget)
# plot a histogram of the variable
budget %>% ggplot(aes(x = month(ReleaseDate, label=TRUE))) + geom_bar()
View(budget)
View(box)
# merge (join) budget and box office data (by movie name)
left_join(box, budget, by = "Movie")
# merge (join) budget and box office data (by movie name)
box_budget = left_join(box, budget, by = "Movie")
View(box_budget)
# merge (join) budget and box office data (by movie name)
box_budget = full_join(box, budget, by = "Movie")
View(box_budget)
# plot a histogram of the variable
budget %>% ggplot(aes(x = ReleaseDate)) + geom_bar()
# plot a histogram of the variable
budget %>% ggplot(aes(x = ReleaseDate)) + geom_histogram()
# merge (join) budget and box office data (by movie name)
box_budget = left_join(box, budget, by = "Movie")
dim(anti_join(box, budget, by = "Moive"))
dim(anti_join(box, budget, by = "Movie"))
dim(anti_join(budget, box, by = "Movie"))
# merge (join) budget and box office data (by movie name)
box_budget_1 = left_join(box, budget, by = "Movie")
dim(anti_join(box, budget, by = "Movie"))
dim(anti_join(budget, box, by = "Movie"))
box_budget_1 = inner_join(box, budget, by = "Movie")
# merge (join) budget and box office data (by movie name)
box_budget_1 = left_join(box, budget, by = "Movie")
box_budget_2 = inner_join(box, budget, by = "Movie")
View(box_budget_2)
# merge (join) budget and box office data (by movie name)
dim(box)
dim(budget)
box_budget = inner_join(box, budget, by = "Movie")
# is the time between the release of a movie and the date is equal to the number of weeks in theaters?
box_budget$Diff = weel=k(box_budget$Date)
# is the time between the release of a movie and the date is equal to the number of weeks in theaters?
box_budget$Diff = week(box_budget$Date)
week(box_budget$ReleaseDate)
box_budget_1 = left_join(box, budget, by = "Movie")
dim(anti_join(box, budget, by = "Movie"))
dim(anti_join(budget, box, by = "Movie"))
box_budget = inner_join(box, budget, by = "Movie")
# box_budget$Diff = week(box_budget$Date) - week(box_budget$ReleaseDate)  # a good strategy? = no
box_budget$Diff = as.duration(box_budget$Date - box_budget$ReleaseDate) / dweeks(1)
View(box_budget)
data(nasa, package = "GGally")
View(nasa)
dat(nasa, package = "GGally")
data(nasa, package = "GGally")
install.packages("GGally")
data(nasa, package = "GGally")
head(nasa)
nasa %>% filter(x == 1, y == 1) %>%
ggplot(aes(x = time, y = temperature)) + geom_point()
nasa %>% filter(x == 1, y == 1) %>%
ggplot(aes(x = time, y = temperature)) + geom_line()
nasa %>% filter(x == 1, y %in% c(1, 10)) %>%
ggplot(aes(x = time, y = temperature, group=id, color = id)) + geom_line()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
liquor = read.csv("Iowa_Liquor_Stores.csv")
str(liquor)
length(unique(liquor$City))
liquor.noIA = liquor %>% filter(State != "IA")
unique(liquor.noIA$City)
liquor = liquor %>% mutate(Inactive = if_else(liquor$Store.Status == "I", TRUE, FALSE))
(sum(liquor$Inactive) / (sum(liquor$Inactive) + sum(!liquor$Inactive))) * 100
liquor %>% group_by(City) %>% summarise(
(sum(Inactive) / (sum(Inactive) + sum(!Inactive))) * 100
)
liquor = liquor %>% mutate(City1 = as.character(City))
liquor %>% filter(City1 == "Albert City" | City1 == "Ames" | City1 == "Boone" | City1 == "Clarion" | City1 == "Clive" | City1 == "Dubuque" | City1 == "Des Moines" | City1 == "Garwin" | City1 == "Iowa City" | City1 == "Jefferson")
liquor = select(liquor, -5)
summary.liquor = liquor %>% group_by(City1) %>% summarise(
numberOfStores = length(Store)
)
summary.liquor$City1 = as.factor(summary.liquor$City1)
level.reorder = levels(reorder(summary.liquor$City1, summary.liquor$numberOfStores, fun = sum))
city.reorder = factor(summary.liquor$City1, levels = level.reorder)
summary.liquor$City1 = city.reorder
summary.liquor %>% ggplot(aes(x = City1)) +
geom_bar(aes(weight = numberOfStores)) +
coord_flip()
A = read.csv("Iowa_Liquor_Stores.csv", header = TRUE)
A = A %>% separate(Store.Address, into = c("Address", "Location"), sep = "\n\\(")
A = A %>% separate(Location, into = c("Latitude", "Longitude"), sep = ",") %>% select(-Address)
A = A %>% separate(Longitude, into = c("Longitude", "drop"), sep = "\\)") %>% select(-drop)
A %>% ggplot(aes(x = Latitude, y = Longitude)) +
geom_point()
store = read.csv("Story_County_Liquor_Sales_New.csv")
str(store)
store$Sale..Dollars. = as.numeric(store$Sale..Dollars, na.rm = TRUE)
store$Volume.Sold..Liters. = as.numeric(store$Volume.Sold..Liters., na.rm = TRUE)
store$City = as.factor(store$City)
store$County = as.factor(store$County)
store$Category.Name = as.factor(store$Category.Name)
str(store)
levels(store$City)
levels(store$City)[1] = levels(store$City)[2]
levels(store$City)[3] = levels(store$City)[4]
levels(store$City)[5] = levels(store$City)[6]
levels(store$City)[5] = levels(store$City)[6]
levels(store$City)[6] = levels(store$City)[7]
levels(store$City)[8] = levels(store$City)[9]
levels(store$City)[9] = levels(store$City)[10]
levels(store$City)
store = store %>% separate(Date, into = c("month", "day", "year"), sep = "/")
Liquor.Sale.Summary1 = store %>% group_by(month, day, year, City) %>% summarise(
total.volume = sum(Volume.Sold..Gallons.),
total.sale = sum(Sale..Dollars.)
)
Liquor.Sale.Summary1 %>% ggplot(aes(x = City)) +
geom_bar(aes(weight = total.volume))
Liquor.Sale.Summary1 %>% ggplot(aes(x = month, fill = year)) +
geom_bar(aes(weight = total.sale)) +
facet_wrap(~City, scales = "free")
Liquor.Sale.Summary2 = store %>% filter(City == "AMES")
Liquor.Sale.Summary2 = Liquor.Sale.Summary2 %>% group_by(month, year, Store.Name) %>% summarise(
total.volume = sum(Volume.Sold..Gallons.),
total.sale = sum(Sale..Dollars.)
)
winningStores = Liquor.Sale.Summary2 %>% filter(year == 2016)
winningStores = winningStores %>% group_by(month) %>% summarise(
winner = Store.Name[which.max(total.sale)]
)
store.2016.2017 = store %>% filter(year == 2016 | year == 2017)
store.2016.2017 = store.2016.2017 %>% group_by(month, year, day, Store.Name) %>% summarise(
total.volume = sum(Volume.Sold..Gallons.),
total.sale = sum(Sale..Dollars.)
)
store.2016.2017 %>% ggplot(aes(x = month, y = total.sale, color = as.factor(year))) +
geom_point() +
facet_wrap(~Store.Name, scales = "free")
View(summary.liquor)
liquor1 = liquor %>% filter(City1 == "Albert City" | City1 == "Ames" | City1 == "Boone" | City1 == "Clarion" | City1 == "Clive" | City1 == "Dubuque" | City1 == "Des Moines" | City1 == "Garwin" | City1 == "Iowa City" | City1 == "Jefferson")
liquor1 = select(liquor, -5)
summary.liquor = liquor1 %>% group_by(City1) %>% summarise(
numberOfStores = length(Store)
)
summary.liquor$City1 = as.factor(summary.liquor$City1)
level.reorder = levels(reorder(summary.liquor$City1, summary.liquor$numberOfStores, fun = sum))
city.reorder = factor(summary.liquor$City1, levels = level.reorder)
summary.liquor$City1 = city.reorder
- Using ggplot2, draw a bar plot that shows the number of the liquor stores for those 10 cities. Make sure the levels of the cities are ordered appropriately (from the previous question). Comment on the result.<br>
**Answer: There are a lot of cities with a small amount of stores. There are only a few cites with more than 30 liquor stores. **
```{r}
summary.liquor %>% ggplot(aes(x = City1)) +
geom_bar(aes(weight = numberOfStores)) +
coord_flip()
```
summary.liquor %>% ggplot(aes(x = City1)) +
geom_bar(aes(weight = numberOfStores)) +
coord_flip()
summary.liquor %>% ggplot(aes(x = City1)) +
geom_bar(aes(weight = numberOfStores)) +
coord_flip()
liquor = liquor %>% mutate(City1 = as.character(City))
liquor = read.csv("Iowa_Liquor_Stores.csv")
liquor = liquor %>% mutate(Inactive = if_else(liquor$Store.Status == "I", TRUE, FALSE))
(sum(liquor$Inactive) / (sum(liquor$Inactive) + sum(!liquor$Inactive))) * 100
liquor %>% group_by(City) %>% summarise(
(sum(Inactive) / (sum(Inactive) + sum(!Inactive))) * 100
)
liquor = liquor %>% mutate(City1 = as.character(City))
liquor1 = liquor %>% filter(City1 == "Albert City" | City1 == "Ames" | City1 == "Boone" | City1 == "Clarion" | City1 == "Clive" | City1 == "Dubuque" | City1 == "Des Moines" | City1 == "Garwin" | City1 == "Iowa City" | City1 == "Jefferson")
liquor1 = select(liquor, -5)
summary.liquor = liquor1 %>% group_by(City1) %>% summarise(
numberOfStores = length(Store)
)
summary.liquor$City1 = as.factor(summary.liquor$City1)
level.reorder = levels(reorder(summary.liquor$City1, summary.liquor$numberOfStores, fun = sum))
city.reorder = factor(summary.liquor$City1, levels = level.reorder)
summary.liquor$City1 = city.reorder
summary.liquor %>% ggplot(aes(x = City1)) +
geom_bar(aes(weight = numberOfStores)) +
coord_flip()
View(summary.liquor)
liquor1 = liquor %>% filter(City1 == "Albert City" | City1 == "Ames" | City1 == "Boone" | City1 == "Clarion" | City1 == "Clive" | City1 == "Dubuque" | City1 == "Des Moines" | City1 == "Garwin" | City1 == "Iowa City" | City1 == "Jefferson")
View(liquor1)
summary.liquor = liquor1 %>% group_by(City1) %>% summarise(
numberOfStores = length(Store)
)
View(summary.liquor)
summary.liquor$City1 = as.factor(summary.liquor$City1)
level.reorder = levels(reorder(summary.liquor$City1, summary.liquor$numberOfStores, fun = sum))
city.reorder = factor(summary.liquor$City1, levels = level.reorder)
summary.liquor$City1 = city.reorder
summary.liquor %>% ggplot(aes(x = City1)) +
geom_bar(aes(weight = numberOfStores)) +
coord_flip()
Liquor.Sale.Summary1 %>% ggplot(aes(x = month, fill = year)) +
geom_bar(aes(weight = total.sale)) +
facet_wrap(~City, scales = "free")
Liquor.Sale.Summary1 %>% ggplot(aes(x = City)) +
geom_bar(aes(weight = total.volume))
store.2016.2017 %>% ggplot(aes(x = month, y = total.sale, color = as.factor(year))) +
geom_point() +
facet_wrap(~Store.Name, scales = "free")
store.2016.2017 = store.2016.2017 %>% group_by(month, year, day, Store.Name) %>% summarise(
total.volume = sum(Volume.Sold..Gallons.),
total.sale = sum(Sale..Dollars.)
)
store.2016.2017 = store %>% filter(year == 2016 | year == 2017)
store.2016.2017 = store.2016.2017 %>% group_by(month, year, day, Store.Name) %>% summarise(
total.volume = sum(Volume.Sold..Gallons.),
total.sale = sum(Sale..Dollars.)
)
store.2016.2017 %>% ggplot(aes(x = month, y = total.sale, color = as.factor(year))) +
geom_point() +
facet_wrap(~Store.Name, scales = "free")
store.2016.2017 = store.2016.2017 %>% group_by(month, year, Store.Name) %>% summarise(
total.volume = sum(Volume.Sold..Gallons.),
total.sale = sum(Sale..Dollars.)
)
store.2016.2017 = store %>% filter(year == 2016 | year == 2017)
store.2016.2017 = store.2016.2017 %>% group_by(month, year, Store.Name) %>% summarise(
total.volume = sum(Volume.Sold..Gallons.),
total.sale = sum(Sale..Dollars.)
)
store.2016.2017 %>% ggplot(aes(x = month, y = total.sale, color = as.factor(year))) +
geom_point() +
facet_wrap(~Store.Name, scales = "free")
nasa %>% filter(x == 1, y %in% c(1, 10)) %>%
ggplot(aes(x = time, y = temperature, group=id, color = id)) + geom_line()
nasa %>% filter(x == 1, y %in% c(1, 10)) %>%
ggplot(aes(x = time, y = ozone, group = id, color = id)) + geom_line()
box.summary = box %>% group_by(Movie, Distributor) %>%
summarise(
max.date = max(Date),
max.week = mac(Week),
total.gross = max(Total.Gross),
first.week.gross = min(Total.Gross)
)
box.summary = box %>% group_by(Movie, Distributor) %>%
summarise(
max.date = max(Date),
max.week = max(Week),
total.gross = max(Total.Gross),
first.week.gross = min(Total.Gross)
)
View(box.summary)
box.summary = box %>% group_by(Movie, Distributor) %>%
summarise(
max.date = max(Date),
max.week = max(Week),
max.total.gross = max(Total.Gross),
first.week.gross = min(Total.Gross) # problem, min and max are the same
)
View(box.summary)
source("~/Desktop/Iowa State University/Comp Sci/ds202/Class Notes/layers.R", echo=TRUE)
source("~/Desktop/Iowa State University/Comp Sci/ds202/Class Notes/layers.R", echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
av <- read.csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/avengers/avengers.csv", stringsAsFactors = FALSE)
names(av) # columns
av0 = av %>% filter(Name.Alias != "")
av0 = av0 %>% filter(Name.Alias != "Vance Astrovik")
av1 = av0 %>% gather(key = time, value = death, c(11, 13, 15, 17, 19)) %>%
select(Name.Alias, time, death) %>%
mutate(time = parse_number(time))
av2 = av0 %>% gather(key = time, value = return, c(12, 14, 16, 18, 20)) %>%
select(Name.Alias, time, return) %>%
mutate(time = parse_number(time))
av.neat = left_join(av1, av2, by = c("Name.Alias", "time"))
View(av.neat)
View(av)
View(av.neat)
df1 = av.neat %<% filter(Name.Alias = "Clinton Francis Barton" & death = "YES")
df1 = av.neat %>% dplyr::filter(Name.Alias = "Clinton Francis Barton" & death = "YES")
View(av.neat)
hawkeye = av.neat %>% dplyr::filter(Name.Alias == "Clinton Francis Barton" & death == "YES")
View(hawkeye)
nrow(hawkeye)
avengers = av.neat %>% filter(Name.Alias %in% c("Anthony Edward \"Tony\" Stark", "Steven Rogers", "Clinton Francis Barton", "Thor Odinson", "Natalia Alianovna Romanova", "Wanda Maximoff", "Pietro Maximoff", "Victor Shade"))
View(avengers)
avengers = av.neat %>% filter(Name.Alias %in% c("Anthony Edward \"Tony\" Stark", "Steven Rogers", "Clinton Francis Barton", "Thor Odinson", "Natalia Alianovna Romanova", "Wanda Maximoff", "Pietro Maximoff", "Victor Shade") & death = "YES") %>% summarise(n == n())
avengers = av.neat %>% filter(Name.Alias %in% c("Anthony Edward \"Tony\" Stark", "Steven Rogers", "Clinton Francis Barton", "Thor Odinson", "Natalia Alianovna Romanova", "Wanda Maximoff", "Pietro Maximoff", "Victor Shade") & death = "YES") %>% summarise(n = n())
avengers = av.neat %>% filter(Name.Alias %in% c("Anthony Edward \"Tony\" Stark", "Steven Rogers", "Clinton Francis Barton", "Thor Odinson", "Natalia Alianovna Romanova", "Wanda Maximoff", "Pietro Maximoff", "Victor Shade") & death == "YES") %>% summarise(n = n())
View(avengers)
avengers = av.neat %>% filter(Name.Alias %in% c("Anthony Edward \"Tony\" Stark", "Steven Rogers", "Clinton Francis Barton", "Thor Odinson", "Natalia Alianovna Romanova", "Wanda Maximoff", "Pietro Maximoff", "Victor Shade") & death == "YES")
head(avengers)
columns(avengers)
column(avengers)
col(avengers)
summarise(avengers)
names(avengers)
values(avengers)
head(avengers)
head(avengers, 9)
avengers = av.neat %>% filter(Name.Alias %in% c("Anthony Edward \"Tony\" Stark", "Steven Rogers", "Clinton Francis Barton", "Thor Odinson", "Natalia Alianovna Romanova", "Wanda Maximoff", "Pietro Maximoff", "Victor Shade") & death == "YES" & time == 1)
head(avengers, 9)
head(avengers, 7)
avengers = av.neat %>% filter(Name.Alias %in% c("Anthony Edward \"Tony\" Stark", "Steven Rogers", "Clinton Francis Barton", "Thor Odinson", "Natalia Alianovna Romanova", "Wanda Maximoff", "Pietro Maximoff", "Victor Shade") & time == 1)
head(avengers, 7)
avengers = av.neat %>% filter(Name.Alias %in% c("Anthony Edward \"Tony\" Stark", "Steven Rogers", "Clinton Francis Barton", "Thor Odinson", "Natalia Alianovna Romanova", "Wanda Maximoff", "Pietro Maximoff", "Victor Shade", "Robert Bruce Banner") & time == 1)
head(avengers, 7)
head(avengers, 9)
avengers = av.neat %>% filter(Name.Alias %in% c("Anthony Edward \"Tony\" Stark", "Steven Rogers", "Clinton Francis Barton", "Thor Odinson", "Natalia Alianovna Romanova", "Wanda Maximoff", "Pietro Maximoff", "Victor Shade", "Robert Bruce Banner") & death == "YES")
head(avengers, 9)
avengers = av.neat %>% filter(Name.Alias %in% c("Anthony Edward \"Tony\" Stark", "Steven Rogers", "Clinton Francis Barton", "Thor Odinson", "Natalia Alianovna Romanova", "Wanda Maximoff", "Pietro Maximoff", "Victor Shade (alias)", "Robert Bruce Banner") & death == "YES")
head(avengers, 9)
back = av.neat %>% filter(return = "YES")
back = av.neat %>% filter(return == "YES") %>% summarise(n = n())
View(back)
head(back)
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "story")))
library(tidyverse)
library(classdata)
states <- map_data("state")
head(states)
states %>% ggplot(aes(x = long, y = lat)) + geom_point() # dotted outline
states %>% ggplot(aes(x = long, y = lat)) + geom_path(aes(group = group)) # line outline
states %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group)) # filled in
states %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill=lat)) # filled in by color for lat
counties <- map_data("county")
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "story")))
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "lake")))
counties %>% group_by(subregion) %>% summarise(n = n()) %>% arrange(desc(n))
counties %>% group_by(subregion, regioun) %>% summarise(n = n()) %>% arrange(desc(n))
counties %>% group_by(subregion, region) %>% summarise(n = n()) %>% arrange(desc(n))
counties %>% group_by(subregion, region) %>% summarise(n = n()) %>% group_by(subregion) %>% count(subregion)
counties %>% group_by(group)
counties %>% group_by(subregion) %>% summarise(n = unique(group)) %>% arrange(desc(n))
counties %>% group_by(subregion) %>% summarise(n = length(unique(group))) %>% arrange(desc(n))
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "story")))
counties %>% group_by(subregion) %>% summarise(n = length(unique(group))) %>% arrange(desc(n))
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "le seuer")))
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "le sueur")))
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "aroostook")))
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "washignton")))
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "washington")))
source("~/Desktop/Iowa State University/Comp Sci/ds202/Class Notes/maps.R", echo=TRUE)
map %>% ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group)) +
geom_point(aes(x=longitude, y = latitude), data = content)
library(tidyverse)
library(classdata)
states <- map_data("state")
head(states)
states %>% ggplot(aes(x = long, y = lat)) + geom_point() # dotted outline
states %>% ggplot(aes(x = long, y = lat)) + geom_path(aes(group = group)) # line outline
states %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group)) # filled in
states %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill=lat)) # filled in by color for lat
counties <- map_data("county")
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "washington")))
View(counties)
counties <- map_data("county")
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "washington")))
counties %>% group_by(subregion) %>% summarise(n = length(unique(group))) %>% arrange(desc(n))
map %>% ggplot(aes(x = long, y = lat)) +
geom_polygon(aes(group = group)) +
geom_point(aes(x=longitude, y = latitude), data = content)
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "story")))
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "lake")))
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "big stone")))
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "blue earth")))
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "benton")))
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "beltrami")))
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "becker")))
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "anoka")))
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "brown")))
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "carlton")))
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "carver")))
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "cass")))
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "chippewa")))
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "chisago")))
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "clay")))
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "clearwater")))
counties %>% ggplot(aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = (subregion == "cook")))
library(tidyverse)
# default continuous color scheme
# scale_color_gradient -> used for continuous
p1 <- mpg %>% filter(year == 2008) %>%
ggplot(aes(x = cty, y = hwy, colour = cyl)) +
geom_point()
p1 + scale_color_continuous()
# default discrete color scheme
p2 <- mpg %>% filter(year == 2008) %>%
ggplot(aes(x = cty, y = hwy, colour = factor(cyl))) +
geom_point()
p2 + scale_color_discrete()
p2 + scale_color_brewer(palette = "Set1")
p2 + scale_color_brewer(palette = "Dark2")
p2 + scale_color_brewer(palette = "Greens")
p2 = p2 +  scale_color_brewer(palette = "Set1")
p2
p2 + xlab("city miles per gallon") + ylab("highway miles per gallon")
p2 + theme(plot.title = element_text(hjust = 0.5))
p2 = p2 + xlab("city miles per gallon") + ylab("highway miles per gallon") + title("city vs. highway")
p2 + theme(plot.title = element_text(hjust = 0.5))
p2 = p2 + xlab("city miles per gallon") + ylab("highway miles per gallon") + ggtitle("city vs. highway")
p2 + theme(plot.title = element_text(hjust = 0.5))
p2 = p2 + xlab("city miles per gallon") + ylab("highway miles per gallon") + ggtitle("city vs. highway")
p2 + scale_color_brewer(palette = "Greens")
p2 = p2 +  scale_color_brewer(palette = "Set1")
p2
p2 = p2 + xlab("city miles per gallon") + ylab("highway miles per gallon") + ggtitle("city vs. highway")
p2 + theme(plot.title = element_text(hjust = 0.5))
p2 + theme(plot.title = element_text(hjust = 0.5)) + theme(plot.title = element_text(size = 22))
p + theme_bw()
# THEMES
library(RColorBrewer)
display.brewer.all()
p <- mpg %>% ggplot(aes(x = displ, y =  cty, colour= factor(class))) + geom_point()
p + theme_grey() #default -> grey background/white grid
p + theme_bw()
p + theme_grey() #default -> grey background/white grid
p + theme_bw() # white background/
p <- mtcars %>% ggplot(aes(x = wt, y =  mpg, colour= factor(cyl))) + geom_point()
p + theme_light()
p + theme_light()
p + theme_dark()
p + theme_excel()
library(ggthemes)
p + theme_excel()
p + theme_fivethirtyeight()
p2 + theme(plot.title = element_text(hjust = 0.5)) + theme(plot.title = element_text(size = 22))
p2 = p2 + theme(plot.title = element_text(hjust = 0.5)) + theme(plot.title = element_text(size = 22))
p2 + labs(color = "number of cyl")
p2 = p2 + labs(color = "number of cyl")
p2 + theme(legend.position = "bottom")
p2 = p2 + theme(legend.position = "bottom") # move the legend to the bottom of the plot
p2
# CHANGING ELEMENTS MANUALLY
mpg %>% ggplot(aes(x = manufacturer)) + geom_bar() +
theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1))
source("~/Desktop/Iowa State University/Comp Sci/ds202/Class Notes/web_scraping.R", echo=TRUE)
tables <- html %>% html_table(fill=TRUE)
length(tables)
tables[[1]]
tables[[2]]
A = tables[[2]]
View(A)
names(A)
names(A)[1:2] <- c("Rank", "Rank.Last.Week")
str(A)
library(tidyverse)
A = A %>% mutate(TotalGross = parse_number(TotalGross),
PerTheater = parse_number(PerTheater),
Theaters = parse_number(Theaters),
Gross = parse_number(Gross))
str(A)
